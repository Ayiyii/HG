{"remainingRequest":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/babel-loader/lib/index.js!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/exam/paper/edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/exam/paper/edit.vue","mtime":1617532812516},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["edit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"form\" ref=\"form\" label-width=\"100px\" v-loading=\"formLoading\" :rules=\"rules\">\n      <el-form-item label=\"年级：\" prop=\"level\" required>\n        <el-select v-model=\"form.level\" placeholder=\"年级\"  @change=\"levelChange\">\n          <el-option v-for=\"item in levelEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"学科：\" prop=\"subjectId\" required>\n        <el-select v-model=\"form.subjectId\" placeholder=\"学科\">\n          <el-option v-for=\"item in subjectFilter\" :key=\"item.id\" :value=\"item.id\"\n                     :label=\"item.name+' ( '+item.levelName+' )'\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"试卷类型：\" prop=\"paperType\" required>\n        <el-select v-model=\"form.paperType\" placeholder=\"试卷类型\">\n          <el-option v-for=\"item in paperTypeEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"时间限制：\" required v-show=\"form.paperType===4\">\n        <el-date-picker v-model=\"form.limitDateTime\" value-format=\"yyyy-MM-dd HH:mm:ss\" type=\"datetimerange\"\n                        range-separator=\"至\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\">\n        </el-date-picker>\n      </el-form-item>\n      <el-form-item label=\"试卷名称：\"  prop=\"name\" required>\n        <el-input v-model=\"form.name\"/>\n      </el-form-item>\n     \n      <el-form-item label=\"建议时长：\" prop=\"suggestTime\" required>\n        <el-input v-model=\"form.suggestTime\" placeholder=\"分钟\"/>\n      </el-form-item>\n       <el-form-item :key=\"index\" :label=\"'题目'+(index+1)+'：'\" required v-for=\"(titleItem,index) in form.titleItems\">\n\n        <el-input v-model=\"titleItem.name\" style=\"width: 80%\"/>\n        <el-button type=\"text\" class=\"link-left\" style=\"margin-left: 20px\" size=\"mini\" @click=\"addQuestion(titleItem)\">\n          添加题目\n        </el-button>\n        <el-button type=\"text\" class=\"link-left\" size=\"mini\" @click=\"form.titleItems.splice(index,1)\">删除</el-button>\n        <el-card class=\"exampaper-item-box\" v-if=\"titleItem.questionItems.length!==0\">\n          <el-form-item :key=\"questionIndex\" :label=\"'题目'+(questionIndex+1)+'：'\"\n                        v-for=\"(questionItem,questionIndex) in titleItem.questionItems\" style=\"margin-bottom: 15px\">\n            <el-row>\n              <el-col :span=\"23\">\n                <QuestionShow :qType=\"questionItem.questionType\" :question=\"questionItem\"/>\n              </el-col>\n              <el-col :span=\"1\">\n                <el-button type=\"text\" size=\"mini\" @click=\"titleItem.questionItems.splice(questionIndex,1)\">删除\n                </el-button>\n              </el-col>\n            </el-row>\n          </el-form-item>\n          \n        </el-card>\n      </el-form-item>\n    \n\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\n        <el-button @click=\"resetForm\">重置</el-button>\n        <el-button type=\"success\" @click=\"addTitle\">添加题目</el-button>\n         <el-button type=\"success\" @click=\"addAuto\">自动组卷</el-button>\n      </el-form-item>\n    </el-form>\n    <el-dialog :visible.sync=\"questionPage.showDialog\"  width=\"70%\">\n      <el-form :model=\"questionPage.queryParam\" ref=\"queryForm\" :inline=\"true\">\n        <el-form-item label=\"ID：\">\n          <el-input v-model=\"questionPage.queryParam.id\"  clearable></el-input>\n        </el-form-item>\n        <el-form-item label=\"题型：\">\n          <el-select v-model=\"questionPage.queryParam.questionType\" clearable>\n            <el-option v-for=\"item in questionTypeEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"queryForm\">查询</el-button>\n        </el-form-item>\n      </el-form>\n      <el-table v-loading=\"questionPage.listLoading\" :data=\"questionPage.tableData\"\n                @selection-change=\"handleSelectionChange\" border fit highlight-current-row style=\"width: 100%\">\n        <el-table-column type=\"selection\" width=\"35\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"Id\" width=\"60px\"/>\n        <el-table-column prop=\"questionType\" label=\"题型\" :formatter=\"questionTypeFormatter\" width=\"70px\"/>\n        <el-table-column prop=\"shortTitle\" label=\"题干\" show-overflow-tooltip/>\n      </el-table>\n      <pagination v-show=\"questionPage.total>0\" :total=\"questionPage.total\"\n                  :page.sync=\"questionPage.queryParam.pageIndex\" :limit.sync=\"questionPage.queryParam.pageSize\"\n                  @pagination=\"search\"/>\n      <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"questionPage.showDialog = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"confirmQuestionSelect\">确定</el-button>\n     </span>\n    </el-dialog>\n     <el-dialog :visible.sync=\"autoPage.showDialog\"  width=\"70%\" @close='closeDialog'>\n       <el-form  ref=\"autoPage.typePage\" :model=\"autoPage.typePage\">\n       <el-row>\n       \n       <el-form-item :inline=\"true\" :key=\"index\" :label=\"'题型'+(index+1)+'：'\" required v-for=\"(typeItem,index) in autoPage.typePage.questionSelectItems\">\n               <el-col :span=\"6\">\n                <el-select v-model=\"autoPage.typePage.questionSelectItems[index].questionType\" >\n                  <el-option v-for=\"item in questionTypeEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n                </el-select>\n               </el-col>\n                <el-col :span=\"6\">\n                 <el-form-item label=\"难度：\" style=\"margin-left:20px\" >\n                    <el-input v-model=\"autoPage.typePage.questionSelectItems[index].level\" placeholder=\"难度：1~5\" style=\"width:120px\"></el-input>\n                 </el-form-item>\n                 </el-col>\n                  <el-col :span=\"6\">\n                <el-form-item label=\"数量：\" style=\"margin-left:20px\"  >\n                    <el-input v-model=\"autoPage.typePage.questionSelectItems[index].num\" placeholder=\"最少输入1\" style=\"width:120px\"></el-input>\n                </el-form-item>\n                 </el-col>\n              \n          \n        </el-form-item>\n        </el-row>\n        <el-form-item>\n          <el-button @click=\"autoPage.showDialog = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"confirmType\">确定</el-button>\n          <el-button type=\"primary\" @click=\"addType\">添加题型</el-button>\n      </el-form-item>\n      </el-form>\n      \n     \n    </el-dialog>\n  </div>\n</template>\n\n<script>\n\nimport { mapGetters, mapState, mapActions } from 'vuex'\nimport Pagination from '@/components/Pagination'\nimport QuestionShow from '../question/components/Show'\nimport examPaperApi from '@/api/examPaper'\nimport questionApi from '@/api/question'\n\nexport default {\n  components: { Pagination, QuestionShow },\n  data () {\n    return {\n      form: {\n        id: null,\n        level: null,\n        subjectId: null,\n        paperType: 1,\n        limitDateTime: [],\n        name: '',\n        suggestTime: null,\n        titleItems: []\n      },\n      subjectFilter: null,\n      formLoading: false,\n      rules: {\n        level: [\n          { required: true, message: '请选择年级', trigger: 'change' }\n        ],\n        subjectId: [\n          { required: true, message: '请选择学科', trigger: 'change' }\n        ],\n        paperType: [\n          { required: true, message: '请选择试卷类型', trigger: 'change' }\n        ],\n        name: [\n          { required: true, message: '请输入试卷名称', trigger: 'blur' }\n        ],\n        suggestTime: [\n          { required: true, message: '请输入建议时长', trigger: 'blur' }\n        ]\n      },\n      questionPage: {\n        multipleSelection: [],\n        showDialog: false,\n        queryParam: {\n          id: null,\n          questionType: null,\n          subjectId: 1,\n          pageIndex: 1,\n          pageSize: 5\n        },\n        listLoading: true,\n        tableData: [],\n        total: 0\n      },\n      autoPage:{\n        showDialog: false,\n        typePage:{\n          typeItems: [{\n            num:null,\n            level:null,\n            name: '',\n            typeItems: []\n          }],\n          subjectId: null,\n          paperType: 1,\n          limitDateTime: null,\n          name: '',\n          suggestTime: null,\n          questionSelectItems:[{\n            num:null,\n            level:null,\n            subjectId: null,\n            questionType:null\n          }]\n        },\n          \n      },\n     \n      currentTitleItem: [],\n      \n    }\n  },\n  created () {\n    let id = this.$route.query.id\n    let _this = this\n  //  this.autoPage.questionSelectItems.questionType=this.questionPage.queryParam.questionType\n    this.initSubject(function () {\n      _this.subjectFilter = _this.subjects\n    })\n    if (id && parseInt(id) !== 0) {\n      _this.formLoading = true\n      examPaperApi.select(id).then(re => {\n        _this.form = re.response\n        _this.formLoading = false\n      })\n    }\n   this.form\n    \n\n  },\n  methods: {\n    submitForm () {\n      let _this = this\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          this.formLoading = true\n          examPaperApi.edit(this.form).then(re => {\n            if (re.code === 1) {\n              _this.$message.success(re.message)\n              _this.delCurrentView(_this).then(() => {\n                _this.$router.push('/exam/paper/list')\n              })\n            } else {\n              _this.$message.error(re.message)\n              this.formLoading = false\n            }\n          }).catch(e => {\n            this.formLoading = false\n          })\n        } else {\n          return false\n        }\n      })\n    },\n    addTitle () {\n      this.form.titleItems.push({\n        name: '',\n        questionItems: [],\n      })\n    },\n    //添加题型\n     addType () {\n      this.autoPage.typePage.questionSelectItems.push({\n        name: '',\n        typeItems: [],\n        num:null,\n        level:null,\n      })\n      console.log(this.autoPage.typePage.questionSelectItems)\n    },\n    addQuestion (titleItem) {\n      this.currentTitleItem = titleItem\n      this.questionPage.showDialog = true\n      this.search()\n    },\n     addAuto (titleItem) {\n      this.currentTitleItem = titleItem\n      this.autoPage.showDialog = true\n      this.search()\n    },\n     \n    removeTitleItem (titleItem) {\n      this.form.titleItems.remove(titleItem)\n    },\n    removeQuestion (titleItem, questionItem) {\n      titleItem.questionItems.remove(questionItem)\n    },\n    queryForm () {\n      this.questionPage.queryParam.pageIndex = 1\n      this.search()\n    },\n    confirmQuestionSelect () {\n      let _this = this\n      this.questionPage.multipleSelection.forEach(q => {\n        questionApi.select(q.id).then(re => {\n          _this.currentTitleItem.questionItems.push(re.response)\n         // console.log(_this.currentTitleItem)\n        })\n      })\n      this.questionPage.showDialog = false\n    },\n      //  自动组卷\n    confirmType(){\n      this.autoPage.typePage.subjectId=this.form.subjectId;\n      this.autoPage.typePage.suggestTime=this.form.suggestTime;\n      for(let i=0;i<this.autoPage.typePage.questionSelectItems.length;i++){\n        this.autoPage.typePage.questionSelectItems[i].name=''\n        this.autoPage.typePage.questionSelectItems[i].subjectId=this.form.subjectId;\n       // this.autoPage.typePage.questionSelectItems[i].questionType= this.autoPage.typePage.questionSelectItems.questionType;\n      }\n     // console.log(this.autoPage.typePage)\n          let _this = this\n        examPaperApi.auto(this.autoPage.typePage).then(data => {\n          const re = data.response\n          \n           // this.autoform.titleItems.questionItems=[]\n            for(let i=0;i<re.titleItems.length;i++){\n                 this.form.titleItems.push({\n                    name: '',\n                    questionItems: [],\n                  })\n              for(let j=0;j<re.titleItems[i].questionItems.length;j++){\n               // console.log(re.titleItems[i].questionItems[j])\n                let tmp=re.titleItems[i].questionItems[j];\n                // this.currentTitleItem.questionItems.push(tmp)\n                    this.form.titleItems[i].questionItems.push(tmp)\n                /*   this.$set(this.autoform.titleItems,j,{\n                        name: '',\n                    questionItems: tmp,\n                  })*/\n              }\n            }\n          \n            console.log(this.form.titleItems)\n          \n        })\n        //this.$refs['autoPage'].resetFields()  // 这里可以换做移除样式的方法clearValidate\n       // this.autoPage.typePage = copyProps(this.autoPage.typePage)  \n      \n        this.autoPage.showDialog = false\n    },\n    closeDialog(){\n      this.autoPage.typePage={typeItems: [{\n            num:null,\n            level:null,\n            name: '',\n            typeItems: []\n          }],\n          subjectId: null,\n          paperType: 1,\n          limitDateTime: null,\n          name: '',\n          suggestTime: null,\n          questionSelectItems:[{\n            num:null,\n            level:null,\n            subjectId: null,\n            questionType:null\n          }]\n      }\n    },\n    levelChange () {\n      this.form.subjectId = null\n      this.subjectFilter = this.subjects.filter(data => data.level === this.form.level)\n    },\n    search () {\n      this.questionPage.queryParam.subjectId = this.form.subjectId\n      this.questionPage.listLoading = true\n      questionApi.pageList(this.questionPage.queryParam).then(data => {\n        const re = data.response\n        this.questionPage.tableData = re.list\n        this.questionPage.total = re.total\n        this.questionPage.queryParam.pageIndex = re.pageNum\n        this.questionPage.listLoading = false\n      })\n    },\n    handleSelectionChange (val) {\n      this.questionPage.multipleSelection = val\n    },\n    questionTypeFormatter (row, column, cellValue, index) {\n      return this.enumFormat(this.questionTypeEnum, cellValue)\n    },\n    subjectFormatter (row, column, cellValue, index) {\n      return this.subjectEnumFormat(cellValue)\n    },\n    resetForm () {\n      this.$refs['form'].resetFields()\n      this.form = {\n        id: null,\n        level: null,\n        subjectId: null,\n        paperType: 1,\n        limitDateTime: [],\n        name: '',\n        suggestTime: null,\n        titleItems: []\n      }\n      this.autoPage.typePage={typeItems: [{\n            num:null,\n            level:null,\n            name: '',\n            typeItems: []\n          }],\n          subjectId: null,\n          paperType: 1,\n          limitDateTime: null,\n          name: '',\n          suggestTime: null,\n          questionSelectItems:[{\n            num:null,\n            level:null,\n            subjectId: null,\n            questionType:null\n          }]\n      }\n    },\n    ...mapActions('exam', { initSubject: 'initSubject' }),\n    ...mapActions('tagsView', { delCurrentView: 'delCurrentView' })\n  },\n  computed: {\n    ...mapGetters('enumItem', ['enumFormat']),\n    ...mapState('enumItem', {\n      questionTypeEnum: state => state.exam.question.typeEnum,\n      paperTypeEnum: state => state.exam.examPaper.paperTypeEnum,\n      levelEnum: state => state.user.levelEnum\n    }),\n    ...mapState('exam', { subjects: state => state.subjects }),\n    /*maxValue(){\n      return '最多输入'+this.questionPage.total\n    },\n    */\n   \n  }\n}\n</script>\n\n<style lang=\"scss\">\n  .exampaper-item-box {\n    .q-title {\n      margin: 0px 5px 0px 5px;\n    }\n    .q-item-content {\n    }\n  }\n</style>\n"],"sourceRoot":"src/views/exam/paper"}]}