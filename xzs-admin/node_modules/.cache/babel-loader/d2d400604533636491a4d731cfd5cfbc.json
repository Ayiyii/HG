{"remainingRequest":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/babel-loader/lib/index.js!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/exam/question/edit/gap-filling.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/exam/question/edit/gap-filling.vue","mtime":1621420811559},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9jeW50aGlhY2hlbi9wcm9qZWN0L2dyYWR1YXRpb25fZGVzaWduL3h6cy94enMtbXlzcWwvc291cmNlL3Z1ZS94enMtYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvY3ludGhpYWNoZW4vcHJvamVjdC9ncmFkdWF0aW9uX2Rlc2lnbi94enMveHpzLW15c3FsL3NvdXJjZS92dWUveHpzLWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFF1ZXN0aW9uU2hvdyBmcm9tICcuLi9jb21wb25lbnRzL1Nob3cnOwppbXBvcnQgVWVkaXRvciBmcm9tICdAL2NvbXBvbmVudHMvVWVkaXRvcic7CmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcFN0YXRlLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCc7CmltcG9ydCBxdWVzdGlvbkFwaSBmcm9tICdAL2FwaS9xdWVzdGlvbic7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBVZWRpdG9yOiBVZWRpdG9yLAogICAgUXVlc3Rpb25TaG93OiBRdWVzdGlvblNob3cKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtOiB7CiAgICAgICAgaWQ6IG51bGwsCiAgICAgICAgcXVlc3Rpb25UeXBlOiA0LAogICAgICAgIGdyYWRlTGV2ZWw6IG51bGwsCiAgICAgICAgc3ViamVjdElkOiBudWxsLAogICAgICAgIHRpdGxlOiAnJywKICAgICAgICB2aWRlb1BhdGg6ICcnLAogICAgICAgIGF1ZGlvUGF0aDogJycsCiAgICAgICAgaW1hZ2VQYXRoOiAnJywKICAgICAgICBpdGVtczogW10sCiAgICAgICAgYW5hbHl6ZTogJycsCiAgICAgICAgY29ycmVjdDogJycsCiAgICAgICAgc2NvcmU6ICcnLAogICAgICAgIGRpZmZpY3VsdDogMCwKICAgICAgICBjaGFwdGVySWQ6ICcnLAogICAgICAgIHNlY3JldDogdHJ1ZQogICAgICB9LAogICAgICBzdWJqZWN0RmlsdGVyOiBudWxsLAogICAgICBmb3JtTG9hZGluZzogZmFsc2UsCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgZ3JhZGVMZXZlbDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+mAieaLqeW5tOe6pycsCiAgICAgICAgICB0cmlnZ2VyOiAnY2hhbmdlJwogICAgICAgIH1dLAogICAgICAgIHN1YmplY3RJZDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+mAieaLqeWtpuenkScsCiAgICAgICAgICB0cmlnZ2VyOiAnY2hhbmdlJwogICAgICAgIH1dLAogICAgICAgIHRpdGxlOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl6aKY5bmyJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dLAogICAgICAgIGFuYWx5emU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXop6PmnpAnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0sCiAgICAgICAgc2NvcmU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXliIbmlbAnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0KICAgICAgfSwKICAgICAgcmljaEVkaXRvcjogewogICAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICAgIG9iamVjdDogbnVsbCwKICAgICAgICBwYXJhbWV0ZXJOYW1lOiAnJywKICAgICAgICBpbnN0YW5jZTogbnVsbAogICAgICB9LAogICAgICBxdWVzdGlvblNob3c6IHsKICAgICAgICBxVHlwZTogMCwKICAgICAgICBkaWFsb2c6IGZhbHNlLAogICAgICAgIHF1ZXN0aW9uOiBudWxsLAogICAgICAgIGxvYWRpbmc6IGZhbHNlCiAgICAgIH0sCiAgICAgIGNoYXB0ZXJTaG93OiB7CiAgICAgICAgY2hhcHRlcnM6IFtdLAogICAgICAgIG5ld0NoYXB0ZXI6ICcnLAogICAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICAgIHF1ZXJ5Q2hhOiB7CiAgICAgICAgICBwYWdlSW5kZXg6IDEsCiAgICAgICAgICBwYWdlU2l6ZTogMTAwLAogICAgICAgICAgc3ViamVjdElkOiAnJywKICAgICAgICAgIGdyYWRlTGV2ZWw6ICcnCiAgICAgICAgfSwKICAgICAgICBxdWVyeU5ld0NoYTogewogICAgICAgICAgaWQ6ICcnLAogICAgICAgICAgbmFtZTogJycsCiAgICAgICAgICBzdWJqZWN0SWQ6ICcnLAogICAgICAgICAgZ3JhZGVMZXZlbDogJycsCiAgICAgICAgICBpbmZvOiAnJwogICAgICAgIH0sCiAgICAgICAgY2hhSWQ6IFtdLAogICAgICAgIHNvbWVTaG93OiB0cnVlCiAgICAgIH0KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIGlkID0gdGhpcy4kcm91dGUucXVlcnkuaWQ7CgogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLmluaXRTdWJqZWN0KGZ1bmN0aW9uICgpIHsKICAgICAgX3RoaXMuc3ViamVjdEZpbHRlciA9IF90aGlzLnN1YmplY3RzOwogICAgfSk7CgogICAgaWYgKGlkICYmIHBhcnNlSW50KGlkKSAhPT0gMCkgewogICAgICBfdGhpcy5mb3JtTG9hZGluZyA9IHRydWU7CiAgICAgIHRoaXMuaW5pdChpZCk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgJ2NoYXB0ZXJTaG93Lm5ld0NoYXB0ZXInOiBmdW5jdGlvbiBjaGFwdGVyU2hvd05ld0NoYXB0ZXIobmV3VmFsKSB7CiAgICAgIGlmIChuZXdWYWwpIHsKICAgICAgICB0aGlzLm5ld0NoYXB0ZXIgPSBuZXdWYWw7CiAgICAgICAgdGhpcy5wb3N0Q2hhcHRlcigpOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoewogICAgaW5pdDogZnVuY3Rpb24gaW5pdChpZCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gcXVlc3Rpb25BcGkuc2VsZWN0KGlkKS50aGVuKGZ1bmN0aW9uIChyZSkgewogICAgICAgICAgICAgICAgICBfdGhpczIuZm9ybSA9IHJlLnJlc3BvbnNlOwogICAgICAgICAgICAgICAgICBfdGhpczIuY2hhcHRlclNob3cucXVlcnlOZXdDaGEuc3ViamVjdElkID0gX3RoaXMyLmZvcm0uc3ViamVjdElkOwogICAgICAgICAgICAgICAgICBfdGhpczIuY2hhcHRlclNob3cucXVlcnlDaGEuc3ViamVjdElkID0gX3RoaXMyLmZvcm0uc3ViamVjdElkOyAvL+ino+WGs+W3suacieefpeivhueCueeahOaYvuekuumXrumimO+8jGVsZW1lbnQtdWkgc2VsZWN057uE5Lu25Lya6Ieq5Yqo5Yy56YWNIOS8oOWFpeeahOWAvCDlkowgdmFsdWXlgLws5aaC5p6c55u4562JIOWImeaYvuekuuatpHZhbHVl5omA5a+55bqU55qEbGFiZWzlgLwKCiAgICAgICAgICAgICAgICAgIF90aGlzMi5jaGFwdGVyU2hvdy5uZXdDaGFwdGVyID0gcGFyc2VJbnQoX3RoaXMyLmZvcm0uY2hhcHRlcklkKTsKICAgICAgICAgICAgICAgICAgX3RoaXMyLmZvcm1Mb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGN1cnJTdGF0aW9uQ2hhbmdlOiBmdW5jdGlvbiBjdXJyU3RhdGlvbkNoYW5nZSh2YWwpIHsKICAgICAgY29uc29sZS5sb2coJ2N1cnJTdGF0aW9uQ2hhbmdlJywgdmFsKTsKCiAgICAgIGlmICh2YWwpIHsKICAgICAgICB0aGlzLmNoYXB0ZXJTaG93LnF1ZXJ5TmV3Q2hhLnN1YmplY3RJZCA9IHZhbDsKICAgICAgICB0aGlzLmNoYXB0ZXJTaG93LnF1ZXJ5Q2hhLnN1YmplY3RJZCA9IHZhbDsgLy8gY29uc29sZS5sb2codGhpcy5jaGFwdGVyU2hvdy5xdWVyeU5ld0NoYS5zdWJqZWN0SWQpCgogICAgICAgIHRoaXMuZ2V0Q2hhcHRlcigpOyAvLyB0aGlzLnBvc3RDaGFwdGVyKCkKICAgICAgfQogICAgfSwKICAgIC8vY2hhbmdlKCl7IHRoaXMuJGZvcmNlVXBkYXRlKCkgfSwgCiAgICBnZXRDaGFwdGVyOiBmdW5jdGlvbiBnZXRDaGFwdGVyKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHF1ZXN0aW9uQXBpLmNoYXB0ZXJMaXN0KHRoaXMuY2hhcHRlclNob3cucXVlcnlDaGEpLnRoZW4oZnVuY3Rpb24gKHJlKSB7CiAgICAgICAgdmFyIGxpc3QgPSByZS5yZXNwb25zZS5saXN0OwogICAgICAgIHZhciBsaXN0MSA9IFtdOyAvL2xldCBjaGFJZD1bXTsKICAgICAgICAvL+WOu+mZpOepuumhuQoKICAgICAgICBfdGhpczMuY2hhSWQgPSBbXTsKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBfdGhpczMuY2hhSWQucHVzaChsaXN0W2ldLmlkKTsKCiAgICAgICAgICBpZiAobGlzdFtpXS5uYW1lKSB7CiAgICAgICAgICAgIGxpc3QxLnB1c2gobGlzdFtpXSk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBfdGhpczMuY2hhcHRlclNob3cuY2hhcHRlcnMgPSBsaXN0MTsKICAgICAgICBfdGhpczMuZm9ybS5jaGFwdGVySWQgPSBTdHJpbmcoX3RoaXMzLmNoYXB0ZXJTaG93LmNoYXB0ZXJzWzBdLmlkKTsgLy8gIGNvbnNvbGUubG9nKHRoaXMuY2hhSWQpCiAgICAgIH0pOwogICAgfSwKICAgIHBvc3RDaGFwdGVyOiBmdW5jdGlvbiBwb3N0Q2hhcHRlcigpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICAvL2NvbnNvbGUubG9nKHZhbCkKICAgICAgaWYgKHRoaXMubmV3Q2hhcHRlciAhPSAnJykgewogICAgICAgIC8v6Kej5Yaz55+l6K+G54K56YeN5aSNcG9zdAogICAgICAgIGlmICh0aGlzLmNoYUlkLmluY2x1ZGVzKE51bWJlcih0aGlzLm5ld0NoYXB0ZXIpKSA9PSBmYWxzZSkgewogICAgICAgICAgdGhpcy5jaGFwdGVyU2hvdy5xdWVyeU5ld0NoYS5uYW1lID0gdGhpcy5uZXdDaGFwdGVyOyAvLyAKCiAgICAgICAgICBxdWVzdGlvbkFwaS5pbnNlcnRDaGFwdGVyKHRoaXMuY2hhcHRlclNob3cucXVlcnlOZXdDaGEpLnRoZW4oZnVuY3Rpb24gKHJlKSB7CiAgICAgICAgICAgIGlmIChyZS5jb2RlID09IDEpIHsKICAgICAgICAgICAgICBfdGhpczQuZ2V0Q2hhcHRlcigpOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsgLy9jb25zb2xlLmxvZyh0aGlzLmZvcm0uY2hhcHRlcklkKQogICAgICAgICAgLy9pZigpCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgZ2V0SW1hZ2U6IGZ1bmN0aW9uIGdldEltYWdlKGV2LCB0eXBlcikgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHZhciB0aGF0ID0gdGhpczsgLy/ojrflj5bkuIrkvKDmlofku7bmoIfnrb4KCiAgICAgIHZhciBmaWxlc0lkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BvcF9pbWFnZScpOyAvL+iOt+WPlumfs+mikeagh+etvgoKICAgICAgdmFyIGltYWdlSWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1hZ2VJZCcpOyAvL+aKiuW9k+WJjWZpbGVzWzBd5Lyg57uZZ2V0RmlsZVVSTOaWueazle+8jCBnZXRGaWxlVVJM5pa55rOV5a+55YW25YGa5LiA5aSE55CGCgogICAgICB0aGF0LmZvcm0uaW1hZ2VQYXRoID0gdGhpcy5nZXRGaWxlVVJMKGZpbGVzSWQuZmlsZXNbMF0pOwogICAgICBjb25zb2xlLmxvZyh0aGF0LmZvcm0uaW1hZ2VQYXRoKTsgLy8gaWYgKHRoaXMudmlkZW9VcmwpIHsKICAgICAgLy/nu5l2aWRlb+agh+etvuiuvue9rnNyYwogICAgICAvLyAgIHZpZGVvSWQuc3JjID0gdGhpcy52aWRlb1VybAogICAgICAvLyAgIGNvbnNvbGUubG9nKHZpZGVvSWQuc3JjKQogICAgICAvLyB9CgogICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCJtdWx0aXBhcnRGaWxlIiwgZmlsZXNJZC5maWxlc1swXSk7CiAgICAgIHF1ZXN0aW9uQXBpLmltYWdlUG9zdChmb3JtRGF0YSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT09IDApIHsKICAgICAgICAgIF90aGlzNS5mb3JtLmltYWdlUGF0aCA9IHJlcy5kYXRhLmRhdGEudXJsOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKHVybCk7CiAgICB9LAogICAgZ2V0VmlkZW86IGZ1bmN0aW9uIGdldFZpZGVvKGV2LCB0eXBlcikgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIHZhciB0aGF0ID0gdGhpczsgLy/ojrflj5bkuIrkvKDmlofku7bmoIfnrb4KCiAgICAgIHZhciBmaWxlc0lkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BvcF92aWRlbycpOyAvL+iOt+WPlumfs+mikeagh+etvgoKICAgICAgdmFyIHZpZGVvSWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmlkZW9JZCcpOyAvL+aKiuW9k+WJjWZpbGVzWzBd5Lyg57uZZ2V0RmlsZVVSTOaWueazle+8jCBnZXRGaWxlVVJM5pa55rOV5a+55YW25YGa5LiA5aSE55CGCgogICAgICB0aGF0LmZvcm0udmlkZW9QYXRoID0gdGhpcy5nZXRGaWxlVVJMKGZpbGVzSWQuZmlsZXNbMF0pOwogICAgICBjb25zb2xlLmxvZyh0aGF0LmZvcm0udmlkZW9QYXRoKTsgLy8gaWYgKHRoaXMudmlkZW9VcmwpIHsKICAgICAgLy/nu5l2aWRlb+agh+etvuiuvue9rnNyYwogICAgICAvLyAgIHZpZGVvSWQuc3JjID0gdGhpcy52aWRlb1VybAogICAgICAvLyAgIGNvbnNvbGUubG9nKHZpZGVvSWQuc3JjKQogICAgICAvLyB9CgogICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCJtdWx0aXBhcnRGaWxlIiwgZmlsZXNJZC5maWxlc1swXSk7CiAgICAgIHF1ZXN0aW9uQXBpLnZpZGVvUG9zdChmb3JtRGF0YSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgaWYgKHJlcy5jb2RlID09PSAxKSB7CiAgICAgICAgICBfdGhpczYuZm9ybS52aWRlb1BhdGggPSAnaHR0cDovLzQ3Ljk3LjE1Mi4yMTk6ODAwMCcgKyByZXMucmVzcG9uc2U7CiAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpczYuZm9ybS52aWRlb1BhdGgpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKHVybCk7CiAgICB9LAogICAgZ2V0QXVkaW86IGZ1bmN0aW9uIGdldEF1ZGlvKGV2LCB0eXBlcikgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKCiAgICAgIHZhciB0YWh0ID0gdGhpczsgLy/ojrflj5bkuIrkvKDmlofku7bmoIfnrb4KCiAgICAgIHZhciBmaWxlc0lkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BvcF9hdWRpbycpOyAvL+iOt+WPlumfs+mikeagh+etvgoKICAgICAgdmFyIGF1ZGlvSWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXVkaW9JZCcpOyAvL+aKiuW9k+WJjWZpbGVzWzBd5Lyg57uZZ2V0RmlsZVVSTOaWueazle+8jCBnZXRGaWxlVVJM5pa55rOV5a+55YW25YGa5LiA5aSE55CGCgogICAgICB0aGlzLmZvcm0uYXVkaW9QYXRoID0gdGhpcy5nZXRGaWxlVVJMKGZpbGVzSWQuZmlsZXNbMF0pOwogICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCJtdWx0aXBhcnRGaWxlIiwgZmlsZXNJZC5maWxlc1swXSk7CiAgICAgIHF1ZXN0aW9uQXBpLmF1ZGlvUG9zdChmb3JtRGF0YSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgaWYgKHJlcy5jb2RlID09PSAxKSB7CiAgICAgICAgICBfdGhpczcuZm9ybS5hdWRpb1BhdGggPSByZXMuZGF0YS5kYXRhLnVybDsKICAgICAgICB9CiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZyh0aGlzLnZpZGlvVXJsKTsKICAgIH0sCiAgICBnZXRGaWxlVVJMOiBmdW5jdGlvbiBnZXRGaWxlVVJMKGZpbGUpIHsKICAgICAgdmFyIGdldFVybCA9IG51bGw7CgogICAgICBpZiAod2luZG93LmNyZWF0ZU9iamVjdFVSTCAhPSB1bmRlZmluZWQpIHsKICAgICAgICAvL2Jhc2ljCiAgICAgICAgZ2V0VXJsID0gd2luZG93LmNyZWF0ZU9iamVjdFVSTChmaWxlKTsKICAgICAgfSBlbHNlIGlmICh3aW5kb3cuVVJMICE9IHVuZGVmaW5lZCkgewogICAgICAgIC8vd2luZG93LlVSTCDmoIflh4blrprkuYkKICAgICAgICAvL21vemlsbGEoZmlyZWZveCkKICAgICAgICAvL+iOt+WPluS4gOS4qmh0dHDmoLzlvI/nmoR1cmzot6/lvoTvvIzov5nkuKrml7blgJnlsLHlj6/ku6Xorr7nva48aW1nPuS4reeahOaYvuekugogICAgICAgIGdldFVybCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUpOwogICAgICB9IGVsc2UgaWYgKHdpbmRvdy53ZWJraXRVUkwgIT0gdW5kZWZpbmVkKSB7CiAgICAgICAgLy93aW5kb3cud2Via2l0VVJM5pivd2Via2l055qE5YaF5qC4CiAgICAgICAgLy93ZWJraXQgb3IgY2hyb21lCiAgICAgICAgZ2V0VXJsID0gd2luZG93LndlYmtpdFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRVcmw7IC8vdmlkZW8g5qCH562+55qEIGR1cmF0aW9u5bGe5oCn77yM6I635Y+W5b2T5YmN6KeG6aKR55qE6ZW/5bqmCiAgICAgIC8vIGxldCBkdXJhdGlvbiA9IHZpZGVvSWQuZHVyYXRpb24KICAgICAgLy8gaWYgKE1hdGguZmxvb3IoZHVyYXRpb24pID4gNjApIHsKICAgICAgLy8gIHRoYXQubGF5ZXIubXNnKCfop4bpopHkuI3og73lpKfkuo42MOenkicpCiAgICAgIC8vIH0gCiAgICB9LAogICAgZWRpdG9yUmVhZHk6IGZ1bmN0aW9uIGVkaXRvclJlYWR5KGluc3RhbmNlKSB7CiAgICAgIHRoaXMucmljaEVkaXRvci5pbnN0YW5jZSA9IGluc3RhbmNlOwogICAgICB2YXIgY3VycmVudENvbnRlbnQgPSB0aGlzLnJpY2hFZGl0b3Iub2JqZWN0W3RoaXMucmljaEVkaXRvci5wYXJhbWV0ZXJOYW1lXTsKICAgICAgdGhpcy5yaWNoRWRpdG9yLmluc3RhbmNlLnNldENvbnRlbnQoY3VycmVudENvbnRlbnQpOyAvLyDlhYnmoIflrprkvY3liLBVZWRpdG9yCgogICAgICB0aGlzLnJpY2hFZGl0b3IuaW5zdGFuY2UuZm9jdXModHJ1ZSk7CiAgICB9LAogICAgaW5wdXRDbGljazogZnVuY3Rpb24gaW5wdXRDbGljayhvYmplY3QsIHBhcmFtZXRlck5hbWUpIHsKICAgICAgdGhpcy5yaWNoRWRpdG9yLm9iamVjdCA9IG9iamVjdDsKICAgICAgdGhpcy5yaWNoRWRpdG9yLnBhcmFtZXRlck5hbWUgPSBwYXJhbWV0ZXJOYW1lOwogICAgICB0aGlzLnJpY2hFZGl0b3IuZGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgZWRpdG9yQ29uZmlybTogZnVuY3Rpb24gZWRpdG9yQ29uZmlybSgpIHsKICAgICAgdmFyIGNvbnRlbnQgPSB0aGlzLnJpY2hFZGl0b3IuaW5zdGFuY2UuZ2V0Q29udGVudCgpOwoKICAgICAgaWYgKHRoaXMucmljaEVkaXRvci5wYXJhbWV0ZXJOYW1lID09PSAndGl0bGUnKSB7CiAgICAgICAgLy8g6aKY5bmy55qE5q2j56Gu562U5qGI6YeN572uCiAgICAgICAgaWYgKHRoaXMucXVlc3Rpb25JdGVtUmVzZXQoY29udGVudCkpIHsKICAgICAgICAgIHRoaXMucmljaEVkaXRvci5vYmplY3RbdGhpcy5yaWNoRWRpdG9yLnBhcmFtZXRlck5hbWVdID0gY29udGVudDsKICAgICAgICAgIHRoaXMucmljaEVkaXRvci5kaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgfSBlbHNlIHt9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5yaWNoRWRpdG9yLm9iamVjdFt0aGlzLnJpY2hFZGl0b3IucGFyYW1ldGVyTmFtZV0gPSBjb250ZW50OwogICAgICAgIHRoaXMucmljaEVkaXRvci5kaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICBxdWVzdGlvbkl0ZW1SZXNldDogZnVuY3Rpb24gcXVlc3Rpb25JdGVtUmVzZXQoY29udGVudCkgewogICAgICB2YXIgc3BhblJlZ2V4ID0gbmV3IFJlZ0V4cCgnPHNwYW4gY2xhc3M9ImdhcGZpbGxpbmctc3BhbiAoLio/KSI+KC4qPyk8XFwvc3Bhbj4nLCAnZycpOwoKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBuZXdGb3JtSXRlbSA9IFtdOwogICAgICB2YXIgZ2FwZmlsbGluZ0l0ZW1zID0gY29udGVudC5tYXRjaChzcGFuUmVnZXgpOwoKICAgICAgaWYgKGdhcGZpbGxpbmdJdGVtcyA9PT0gbnVsbCkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+ivt+aPkuWFpeWhq+epuicpOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgZ2FwZmlsbGluZ0l0ZW1zLmZvckVhY2goZnVuY3Rpb24gKHNwYW4sIGluZGV4KSB7CiAgICAgICAgdmFyIHBhaXJSZWdleCA9IC88c3BhbiBjbGFzcz0iZ2FwZmlsbGluZy1zcGFuICguKj8pIj4oLio/KTxcL3NwYW4+LzsKICAgICAgICBwYWlyUmVnZXgudGVzdChzcGFuKTsKICAgICAgICBuZXdGb3JtSXRlbS5wdXNoKHsKICAgICAgICAgIGlkOiBudWxsLAogICAgICAgICAgcHJlZml4OiBSZWdFeHAuJDIsCiAgICAgICAgICBjb250ZW50OiAnJywKICAgICAgICAgIHNjb3JlOiAnMCcKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIG5ld0Zvcm1JdGVtLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBfdGhpcy5mb3JtLml0ZW1zLnNvbWUoZnVuY3Rpb24gKG9sZEl0ZW0sIGluZGV4KSB7CiAgICAgICAgICBpZiAob2xkSXRlbS5pdGVtVXVpZCA9PT0gaXRlbS5pdGVtVXVpZCkgewogICAgICAgICAgICBpdGVtLmNvbnRlbnQgPSBvbGRJdGVtLmNvbnRlbnQ7CiAgICAgICAgICAgIGl0ZW0uaWQgPSBvbGRJdGVtLmlkOwogICAgICAgICAgICBpdGVtLnNjb3JlID0gb2xkSXRlbS5zY29yZTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICBfdGhpcy5mb3JtLml0ZW1zID0gbmV3Rm9ybUl0ZW07CiAgICAgIHJldHVybiB0cnVlOwogICAgfSwKICAgIHN1Ym1pdEZvcm06IGZ1bmN0aW9uIHN1Ym1pdEZvcm0oKSB7CiAgICAgIHZhciBfdGhpczggPSB0aGlzOwoKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuJHJlZnMuZm9ybS52YWxpZGF0ZShmdW5jdGlvbiAodmFsaWQpIHsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIF90aGlzOC5mb3JtTG9hZGluZyA9IHRydWU7CiAgICAgICAgICBxdWVzdGlvbkFwaS5lZGl0KF90aGlzOC5mb3JtKS50aGVuKGZ1bmN0aW9uIChyZSkgewogICAgICAgICAgICBpZiAocmUuY29kZSA9PT0gMSkgewogICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlLnN1Y2Nlc3MocmUubWVzc2FnZSk7CgogICAgICAgICAgICAgIF90aGlzLmRlbEN1cnJlbnRWaWV3KF90aGlzKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIF90aGlzLiRyb3V0ZXIucHVzaCgnL2V4YW0vcXVlc3Rpb24vbGlzdCcpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlLmVycm9yKHJlLm1lc3NhZ2UpOwoKICAgICAgICAgICAgICBfdGhpczguZm9ybUxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgX3RoaXM4LmZvcm1Mb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgbGV2ZWxDaGFuZ2U6IGZ1bmN0aW9uIGxldmVsQ2hhbmdlKCkgewogICAgICB2YXIgX3RoaXM5ID0gdGhpczsKCiAgICAgIHRoaXMuZm9ybS5zdWJqZWN0SWQgPSBudWxsOwogICAgICB0aGlzLnN1YmplY3RGaWx0ZXIgPSB0aGlzLnN1YmplY3RzLmZpbHRlcihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIHJldHVybiBkYXRhLmxldmVsID09PSBfdGhpczkuZm9ybS5ncmFkZUxldmVsOwogICAgICB9KTsKICAgIH0sCiAgICBzaG93UXVlc3Rpb246IGZ1bmN0aW9uIHNob3dRdWVzdGlvbigpIHsKICAgICAgdGhpcy5xdWVzdGlvblNob3cuZGlhbG9nID0gdHJ1ZTsKICAgICAgdGhpcy5xdWVzdGlvblNob3cucVR5cGUgPSB0aGlzLmZvcm0ucXVlc3Rpb25UeXBlOwogICAgICB0aGlzLnF1ZXN0aW9uU2hvdy5xdWVzdGlvbiA9IHRoaXMuZm9ybTsKICAgIH0sCiAgICByZXNldEZvcm06IGZ1bmN0aW9uIHJlc2V0Rm9ybSgpIHsKICAgICAgdmFyIGxhc3RJZCA9IHRoaXMuZm9ybS5pZDsKICAgICAgdGhpcy4kcmVmc1snZm9ybSddLnJlc2V0RmllbGRzKCk7CiAgICAgIHRoaXMuZm9ybSA9IHsKICAgICAgICBpZDogbnVsbCwKICAgICAgICBxdWVzdGlvblR5cGU6IDQsCiAgICAgICAgZ3JhZGVMZXZlbDogbnVsbCwKICAgICAgICBzdWJqZWN0SWQ6IG51bGwsCiAgICAgICAgdGl0bGU6ICcnLAogICAgICAgIGl0ZW1zOiBbXSwKICAgICAgICBhbmFseXplOiAnJywKICAgICAgICBjb3JyZWN0OiAnJywKICAgICAgICBzY29yZTogJycsCiAgICAgICAgZGlmZmljdWx0OiAwCiAgICAgIH07CiAgICAgIHRoaXMuZm9ybS5pZCA9IGxhc3RJZDsKICAgIH0KICB9LCBtYXBBY3Rpb25zKCdleGFtJywgewogICAgaW5pdFN1YmplY3Q6ICdpbml0U3ViamVjdCcKICB9KSksIG1hcEFjdGlvbnMoJ3RhZ3NWaWV3JywgewogICAgZGVsQ3VycmVudFZpZXc6ICdkZWxDdXJyZW50VmlldycKICB9KSksCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKCdlbnVtSXRlbScsIFsnZW51bUZvcm1hdCddKSksIG1hcFN0YXRlKCdlbnVtSXRlbScsIHsKICAgIHF1ZXN0aW9uVHlwZUVudW06IGZ1bmN0aW9uIHF1ZXN0aW9uVHlwZUVudW0oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmV4YW0ucXVlc3Rpb24udHlwZUVudW07CiAgICB9LAogICAgbGV2ZWxFbnVtOiBmdW5jdGlvbiBsZXZlbEVudW0oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnVzZXIubGV2ZWxFbnVtOwogICAgfQogIH0pKSwgbWFwU3RhdGUoJ2V4YW0nLCB7CiAgICBzdWJqZWN0czogZnVuY3Rpb24gc3ViamVjdHMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnN1YmplY3RzOwogICAgfQogIH0pKQp9Ow=="},{"version":3,"sources":["gap-filling.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"form\" ref=\"form\" label-width=\"100px\" v-loading=\"formLoading\"  :rules=\"rules\">\n      <el-form-item label=\"班级：\" prop=\"gradeLevel\" required>\n        <el-select v-model=\"form.gradeLevel\" placeholder=\"年级\" @change=\"levelChange\">\n          <el-option v-for=\"item in levelEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"课程：\" prop=\"subjectId\" required>\n        <el-select v-model=\"form.subjectId\" placeholder=\"课程\" @change=\"currStationChange\">\n          <el-option v-for=\"item in subjectFilter\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name+' ( '+item.levelName+' )'\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"题干：\" prop=\"title\" required>\n        <el-input v-model=\"form.title\"   @focus=\"inputClick(form,'title')\" />\n          <div class=\"upLoad\">\n              <label for=\"pop_image\" id=\"labelr\">\n        <img v-if='form.imagePath' id=\"videoId\" :src='form.imagePath' width=\"100%\"/>\n        <div class=\"flexRow\">\n        <div class=\"inputImage\">上传图片:</div>\n        <input  id=\"pop_image\" type=\"file\" accept=\"image/*\" capture=\"camcorder\" v-on:change=\"getImage(event, '2')\" name=\"fileTrans\" ref=\"file\" value=\"\">\n        </div>\n      </label>\n     </div>\n        <div class=\"upLoad\">\n              <label for=\"pop_video\" id=\"labelr\">\n        <video v-if='form.videoPath' id=\"videoId\" :src='form.videoPath' controls width=\"100%\"></video>\n        <div class=\"flexRow\">\n         <div class=\"inputVideo\">上传视频:</div>\n        <input  id=\"pop_video\" type=\"file\" accept=\"video/*\" capture=\"camcorder\" v-on:change=\"getVideo(event, '2')\" name=\"fileTrans\" ref=\"file\" value=\"上传视频\">\n       </div>\n      </label>\n     </div>\n  \n  <div class=\"upLoad\">\n   <label for=\"pop_audio\" id=\"labelr\">\n    <audio v-if='form.audioPath' id=\"audioId\" :src='form.audioPath' controls width=\"100%\"></audio>\n    <div class=\"flexRow\">\n     <div class=\"inputAudio\">上传音频:</div>\n    <input  id=\"pop_audio\" type=\"file\" accept=\"audio/*\" capture=\"camcorder\" v-on:change=\"getAudio(event, '2')\" name=\"fileTrans\" ref=\"file\" value=\"\">\n    </div>\n   </label>\n  </div>\n      </el-form-item>\n      <el-form-item label=\"填空答案：\" required>\n        <el-form-item :label=\"item.prefix\" :key=\"item.prefix\"  v-for=\"item in form.items\"  label-width=\"50px\" class=\"question-item-label\">\n          <el-input v-model=\"item.content\"   @focus=\"inputClick(item,'content')\"  class=\"question-item-content-input\"  style=\"width: 80%\"/>\n          <span class=\"question-item-span\">分数：</span><el-input-number v-model=\"item.score\" :precision=\"1\" :step=\"1\" :max=\"100\"  ></el-input-number>\n        </el-form-item>\n      </el-form-item>\n      <el-form-item label=\"解析：\" prop=\"analyze\" required>\n        <el-input v-model=\"form.analyze\"  @focus=\"inputClick(form,'analyze')\" />\n      </el-form-item>\n      <el-form-item label=\"分数：\" prop=\"score\" required>\n        <el-input-number v-model=\"form.score\" :precision=\"1\" :step=\"1\" :max=\"100\"></el-input-number>\n      </el-form-item>\n      <el-form-item label=\"难度：\" required>\n        <el-rate v-model=\"form.difficult\" class=\"question-item-rate\"></el-rate>\n      </el-form-item>\n       <el-form-item prop=\"chapterId\" label=\"知识点\">\n      <!--  <ChapterShow :chapters=\"chapterShow.chapters\" :newCha=\"chapterShow.newCha\" :qLoading=\"chapterShow.loading\" @postchapter=\"postChapter\"/>\n      -->\n      <el-select\n    v-model=\"chapterShow.newChapter\"\n    \n    filterable\n    allow-create\n    default-first-option\n    placeholder=\"请选择知识点\"\n   \n    >\n    <el-option\n      v-for=\"item in chapterShow.chapters\"\n      :key=\"item.id\"\n      :label=\"item.name\"\n      :value=\"item.id\">\n    </el-option>\n  </el-select>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\n        <el-button @click=\"resetForm\">重置</el-button>\n        <el-button type=\"success\" @click=\"showQuestion\">预览</el-button>\n      </el-form-item>\n    </el-form>\n    <el-dialog  :visible.sync=\"richEditor.dialogVisible\"  append-to-body :close-on-click-modal=\"false\" style=\"width: 100%;height: 100%\"   :show-close=\"false\" center>\n      <Ueditor @ready=\"editorReady\"/>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"editorConfirm\">确 定</el-button>\n        <el-button @click=\"richEditor.dialogVisible = false\">取 消</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog :visible.sync=\"questionShow.dialog\" style=\"width: 100%;height: 100%\">\n      <QuestionShow :qType=\"questionShow.qType\" :question=\"questionShow.question\" :qLoading=\"questionShow.loading\"/>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport QuestionShow from '../components/Show'\nimport Ueditor from '@/components/Ueditor'\nimport { mapGetters, mapState, mapActions } from 'vuex'\nimport questionApi from '@/api/question'\n\nexport default {\n  components: {\n    Ueditor, QuestionShow\n  },\n  data () {\n    return {\n      form: {\n        id: null,\n        questionType: 4,\n        gradeLevel: null,\n        subjectId: null,\n        title: '',\n        videoPath:'',\n        audioPath:'',\n        imagePath:'',\n        items: [\n        ],\n        analyze: '',\n        correct: '',\n        score: '',\n        difficult: 0,\n        chapterId:'',\n        secret:true,\n      },\n      subjectFilter: null,\n      formLoading: false,\n      rules: {\n        gradeLevel: [\n          { required: true, message: '请选择年级', trigger: 'change' }\n        ],\n        subjectId: [\n          { required: true, message: '请选择学科', trigger: 'change' }\n        ],\n        title: [\n          { required: true, message: '请输入题干', trigger: 'blur' }\n        ],\n        analyze: [\n          { required: true, message: '请输入解析', trigger: 'blur' }\n        ],\n        score: [\n          { required: true, message: '请输入分数', trigger: 'blur' }\n        ]\n      },\n      richEditor: {\n        dialogVisible: false,\n        object: null,\n        parameterName: '',\n        instance: null\n      },\n      questionShow: {\n        qType: 0,\n        dialog: false,\n        question: null,\n        loading: false\n      },\n      chapterShow:{\n        chapters:[],\n        newChapter:'',\n        loading: false,\n        queryCha:{\n          pageIndex:1,\n          pageSize:100,\n          subjectId:'',\n          gradeLevel:'',\n        },\n        queryNewCha:{\n          id:'',\n          name:'',\n          subjectId:'',\n          gradeLevel:'',\n          info:'',\n        },\n        chaId:[],\n        someShow:true\n      }\n    }\n  },\n  created () {\n    let id = this.$route.query.id\n    let _this = this\n    this.initSubject(function () {\n      _this.subjectFilter = _this.subjects\n    })\n    if (id && parseInt(id) !== 0) {\n      _this.formLoading = true\n      this.init(id)\n      \n    }\n\n    \n    \n  },\n  watch: {\n    'chapterShow.newChapter'(newVal){\n      if(newVal){\n        this.newChapter=newVal;\n        this.postChapter()\n      }\n    }\n  },\n  methods: {\n     async init(id){\n     await questionApi.select(id).then(re => {\n        this.form = re.response\n       this.chapterShow.queryNewCha.subjectId=this.form.subjectId;\n        this.chapterShow.queryCha.subjectId=this.form.subjectId;\n        //解决已有知识点的显示问题，element-ui select组件会自动匹配 传入的值 和 value值,如果相等 则显示此value所对应的label值\n        this.chapterShow.newChapter=parseInt(this.form.chapterId)\n        this.formLoading = false\n      })\n     \n       \n        \n    },\n    currStationChange(val) {\n      console.log('currStationChange', val)\n      if (val) {\n         this.chapterShow.queryNewCha.subjectId=val;\n        this.chapterShow.queryCha.subjectId=val;\n       // console.log(this.chapterShow.queryNewCha.subjectId)\n        this.getChapter()\n       // this.postChapter()\n      } \n},\n //change(){ this.$forceUpdate() }, \n\n\n    getChapter(){\n    questionApi.chapterList(this.chapterShow.queryCha).then(re=>{\n        let list=re.response.list;\n        let list1=[];\n        //let chaId=[];\n        //去除空项\n        this.chaId=[]\n       for(let i=0;i<list.length;i++){\n         this.chaId.push(list[i].id)\n         if(list[i].name){\n           list1.push(list[i])\n         }\n       }\n        \n        this.chapterShow.chapters=list1\n         this.form.chapterId=String(this.chapterShow.chapters[0].id)\n      //  console.log(this.chaId)\n    })\n},\npostChapter(){\n  //console.log(val)\n if(this.newChapter!=''){\n    //解决知识点重复post\n    if(this.chaId.includes(Number(this.newChapter))==false){\n      this.chapterShow.queryNewCha.name=this.newChapter\n   // \n    questionApi.insertChapter(this.chapterShow.queryNewCha).then(re=>{\n        if(re.code==1){\n            this.getChapter();\n           \n        }\n    })\n    \n    //console.log(this.form.chapterId)\n    \n   \n    //if()\n    }\n  }\n    \n},\ngetImage (ev, typer) {\n   let that = this\n   //获取上传文件标签\n   let filesId = document.getElementById('pop_image');\n   //获取音频标签\n   let imageId = document.getElementById('imageId')\n   //把当前files[0]传给getFileURL方法， getFileURL方法对其做一处理\n   that.form.imagePath = this.getFileURL(filesId.files[0])\n   console.log(that.form.imagePath)\n  // if (this.videoUrl) {\n    //给video标签设置src\n   //   videoId.src = this.videoUrl\n   //   console.log(videoId.src)\n  // }\n   let formData = new FormData();\n   formData.append(\"multipartFile\", filesId.files[0]);\n   questionApi.imagePost(formData).then(res => {\n    console.log(res)\n    if (res.data.code === 0) {\n     this.form.imagePath = res.data.data.url\n    }\n   })\n   console.log(url)\n  },\n   getVideo (ev, typer) {\n   let that = this\n   //获取上传文件标签\n   let filesId = document.getElementById('pop_video');\n   //获取音频标签\n   let videoId = document.getElementById('videoId')\n   //把当前files[0]传给getFileURL方法， getFileURL方法对其做一处理\n   that.form.videoPath = this.getFileURL(filesId.files[0])\n   console.log(that.form.videoPath)\n  // if (this.videoUrl) {\n    //给video标签设置src\n   //   videoId.src = this.videoUrl\n   //   console.log(videoId.src)\n  // }\n   let formData = new FormData();\n   formData.append(\"multipartFile\", filesId.files[0]);\n   questionApi.videoPost(formData).then(res => {\n    console.log(res)\n    if (res.code === 1) {\n     this.form.videoPath = 'http://47.97.152.219:8000'+res.response\n     console.log(this.form.videoPath)\n    }\n   })\n   console.log(url)\n  },\n  getAudio (ev, typer) {\n   let taht = this\n   //获取上传文件标签\n   let filesId = document.getElementById('pop_audio');\n   //获取音频标签\n   let audioId = document.getElementById('audioId')\n   //把当前files[0]传给getFileURL方法， getFileURL方法对其做一处理\n   this.form.audioPath= this.getFileURL(filesId.files[0])\n\n   \n   let formData = new FormData();\n   formData.append(\"multipartFile\", filesId.files[0]);\n   questionApi.audioPost(formData).then(res => {\n    console.log(res)\n    if (res.code === 1) {\n     this.form.audioPath = res.data.data.url\n    }\n   })\n   console.log(this.vidioUrl)\n  },\n  getFileURL (file) {\n   let getUrl = null\n   if (window.createObjectURL != undefined) {\n    //basic\n    getUrl = window.createObjectURL(file)\n   } else if (window.URL != undefined) {//window.URL 标准定义\n    //mozilla(firefox)\n    //获取一个http格式的url路径，这个时候就可以设置<img>中的显示\n    getUrl = window.URL.createObjectURL(file)\n   } else if (window.webkitURL != undefined) {//window.webkitURL是webkit的内核\n    //webkit or chrome\n    getUrl = window.webkitURL.createObjectURL(file)\n   }\n   return getUrl \n\n   //video 标签的 duration属性，获取当前视频的长度\n   // let duration = videoId.duration\n   // if (Math.floor(duration) > 60) {\n   //  that.layer.msg('视频不能大于60秒')\n   // } \n  },\n    editorReady (instance) {\n      this.richEditor.instance = instance\n      let currentContent = this.richEditor.object[this.richEditor.parameterName]\n      this.richEditor.instance.setContent(currentContent)\n      // 光标定位到Ueditor\n      this.richEditor.instance.focus(true)\n    },\n    inputClick (object, parameterName) {\n      this.richEditor.object = object\n      this.richEditor.parameterName = parameterName\n      this.richEditor.dialogVisible = true\n    },\n    editorConfirm () {\n      let content = this.richEditor.instance.getContent()\n      if (this.richEditor.parameterName === 'title') { // 题干的正确答案重置\n        if (this.questionItemReset(content)) {\n          this.richEditor.object[this.richEditor.parameterName] = content\n          this.richEditor.dialogVisible = false\n        } else {\n\n        }\n      } else {\n        this.richEditor.object[this.richEditor.parameterName] = content\n        this.richEditor.dialogVisible = false\n      }\n    },\n    questionItemReset (content) {\n      let spanRegex = new RegExp('<span class=\"gapfilling-span (.*?)\">(.*?)<\\\\/span>', 'g')\n      let _this = this\n      let newFormItem = []\n      let gapfillingItems = content.match(spanRegex)\n      if (gapfillingItems === null) {\n        this.$message.error('请插入填空')\n        return false\n      }\n      gapfillingItems.forEach(function (span, index) {\n        let pairRegex = /<span class=\"gapfilling-span (.*?)\">(.*?)<\\/span>/\n        pairRegex.test(span)\n        newFormItem.push({ id: null, prefix: RegExp.$2, content: '', score: '0' })\n      })\n\n      newFormItem.forEach(function (item) {\n        _this.form.items.some((oldItem, index) => {\n          if (oldItem.itemUuid === item.itemUuid) {\n            item.content = oldItem.content\n            item.id = oldItem.id\n            item.score = oldItem.score\n            return true\n          }\n        })\n      })\n      _this.form.items = newFormItem\n      return true\n    },\n    submitForm () {\n      let _this = this\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          this.formLoading = true\n          questionApi.edit(this.form).then(re => {\n            if (re.code === 1) {\n              _this.$message.success(re.message)\n              _this.delCurrentView(_this).then(() => {\n                _this.$router.push('/exam/question/list')\n              })\n            } else {\n              _this.$message.error(re.message)\n              this.formLoading = false\n            }\n          }).catch(e => {\n            this.formLoading = false\n          })\n        } else {\n          return false\n        }\n      })\n    },\n    levelChange () {\n      this.form.subjectId = null\n      this.subjectFilter = this.subjects.filter(data => data.level === this.form.gradeLevel)\n    },\n    showQuestion () {\n      this.questionShow.dialog = true\n      this.questionShow.qType = this.form.questionType\n      this.questionShow.question = this.form\n    },\n    resetForm () {\n      let lastId = this.form.id\n      this.$refs['form'].resetFields()\n      this.form = {\n        id: null,\n        questionType: 4,\n        gradeLevel: null,\n        subjectId: null,\n        title: '',\n        items: [\n        ],\n        analyze: '',\n        correct: '',\n        score: '',\n        difficult: 0\n      }\n      this.form.id = lastId\n    },\n    ...mapActions('exam', { initSubject: 'initSubject' }),\n    ...mapActions('tagsView', { delCurrentView: 'delCurrentView' })\n  },\n  computed: {\n    ...mapGetters('enumItem', ['enumFormat']),\n    ...mapState('enumItem', {\n      questionTypeEnum: state => state.exam.question.typeEnum,\n      levelEnum: state => state.user.levelEnum\n    }),\n    ...mapState('exam', { subjects: state => state.subjects })\n  }\n}\n</script>\n"],"sourceRoot":"src/views/exam/question/edit"}]}