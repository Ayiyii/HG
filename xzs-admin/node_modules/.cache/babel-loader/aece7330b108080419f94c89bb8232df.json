{"remainingRequest":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/babel-loader/lib/index.js!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/exam/question/edit/single-choice.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/exam/question/edit/single-choice.vue","mtime":1622641519636},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["single-choice.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n  \n    <el-form :model=\"form\" ref=\"form\" label-width=\"100px\" v-loading=\"formLoading\" :rules=\"rules\">\n      <el-form-item label=\"班级：\" prop=\"gradeLevel\" required>\n        <el-select v-model=\"form.gradeLevel\" placeholder=\"班级\"  @change=\"levelChange\" clearable>\n          <el-option v-for=\"item in levelEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"课程：\" prop=\"subjectId\" required>\n        <el-select v-model=\"form.subjectId\" placeholder=\"课程\" @change=\"currStationChange\">\n          <el-option v-for=\"item in subjectFilter\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name+' ( '+item.levelName+' )'\"></el-option>\n        </el-select>\n      </el-form-item>\n       <el-form-item label=\"考试题目：\" prop=\"secret\" required>\n          <el-radio-group v-model=\"form.secret\">\n            <el-radio :label=\"true\">是</el-radio>\n            <el-radio :label=\"false\">否</el-radio>\n        </el-radio-group>\n        \n      </el-form-item>\n      <el-form-item label=\"题干：\" prop=\"title\" required>\n        <el-input v-model=\"form.title\"   @focus=\"inputClick(form,'title')\" />\n        <div class=\"upLoad\">\n              <label for=\"pop_image\" id=\"labelr\">\n              <img v-if='form.imagePath' id=\"videoId\" :src='form.imagePath' width=\"100%\"/>\n              <div class=\"flexRow\">\n                <div class=\"inputImage\">上传图片:</div>\n                <input  id=\"pop_image\" type=\"file\" accept=\"image/*\" capture=\"camcorder\" v-on:change=\"getImage(event, '2')\" name=\"fileTrans\" ref=\"file\" value=\"\">\n              </div>\n              </label>\n        </div>\n        <div class=\"upLoad\">\n              <label for=\"pop_video\" id=\"labelr\">\n        <video v-if='form.videoPath' id=\"videoId\" :src='form.videoPath' controls width=\"100%\"></video>\n        <div class=\"flexRow\">\n         <div class=\"inputVideo\">上传视频:</div>\n        <input  id=\"pop_video\" type=\"file\" accept=\"video/*\" capture=\"camcorder\" v-on:change=\"getVideo(event, '2')\" name=\"fileTrans\" ref=\"file\" value=\"上传视频\">\n       </div>\n      </label>\n     </div>\n  \n  <div class=\"upLoad\">\n   <label for=\"pop_audio\" id=\"labelr\">\n    <audio v-if='form.audioPath' id=\"audioId\" :src='form.audioPath' controls width=\"100%\"></audio>\n    <div class=\"flexRow\">\n     <div class=\"inputAudio\">上传音频:</div>\n    <input  id=\"pop_audio\" type=\"file\" accept=\"audio/*\" capture=\"camcorder\" v-on:change=\"getAudio(event, '2')\" name=\"fileTrans\" ref=\"file\" value=\"\">\n    </div>\n   </label>\n  </div>\n        \n      \n      </el-form-item>\n      \n\n      <el-form-item label=\"选项：\" required>\n        <el-form-item :label=\"item.prefix\" :key=\"item.prefix\"  v-for=\"(item,index) in form.items\"  label-width=\"50px\" class=\"question-item-label\">\n          <el-input v-model=\"item.prefix\"  style=\"width:50px;\" />\n          <el-input v-model=\"item.content\"   @focus=\"inputClick(item,'content')\"  class=\"question-item-content-input\"/>\n           <el-button type=\"danger\" size=\"mini\" class=\"question-item-remove\" icon=\"el-icon-delete\" @click=\"questionItemRemove(index)\"></el-button>\n        </el-form-item>\n      </el-form-item>\n      <el-form-item label=\"解析：\" prop=\"analyze\" required>\n        <el-input v-model=\"form.analyze\"  @focus=\"inputClick(form,'analyze')\" />\n      </el-form-item>\n      <el-form-item label=\"分数：\" prop=\"score\" required>\n        <el-input-number v-model=\"form.score\" :precision=\"1\" :step=\"1\" :max=\"100\"></el-input-number>\n      </el-form-item>\n      <el-form-item label=\"难度：\" required>\n        <el-rate v-model=\"form.difficult\" class=\"question-item-rate\"></el-rate>\n      </el-form-item>\n      <el-form-item label=\"正确答案：\" prop=\"correct\" required>\n        <el-radio-group v-model=\"form.correct\">\n          <el-radio  v-for=\"item in form.items\"  :key=\"item.prefix\"  :label=\"item.prefix\">{{item.prefix}}</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item prop=\"chapterId\" label=\"知识点\">\n      <!--  <ChapterShow :chapters=\"chapterShow.chapters\" :newCha=\"chapterShow.newCha\" :qLoading=\"chapterShow.loading\" @postchapter=\"postChapter\"/>\n      -->\n          <el-select\n              v-model=\"chapterShow.newChapter\"\n              filterable\n              allow-create\n              default-first-option\n              placeholder=\"请选择知识点\"\n          >\n            <el-option\n              v-for=\"item in chapterShow.chapters\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\">\n            </el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\n        <el-button @click=\"resetForm\">重置</el-button>\n        <el-button type=\"success\" @click=\"questionItemAdd\">添加选项</el-button>\n        <el-button type=\"success\" @click=\"showQuestion\">预览</el-button>\n      </el-form-item>\n    </el-form>\n    <el-dialog  :visible.sync=\"richEditor.dialogVisible\"  append-to-body :close-on-click-modal=\"false\" style=\"width: 100%;height: 100%\"   :show-close=\"false\" center>\n      <Ueditor @ready=\"editorReady\"/>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"editorConfirm\">确 定</el-button>\n        <el-button @click=\"richEditor.dialogVisible = false\">取 消</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog :visible.sync=\"questionShow.dialog\" style=\"width: 100%;height: 100%\">\n      <QuestionShow :qType=\"questionShow.qType\" :question=\"questionShow.question\" :qLoading=\"questionShow.loading\"/>\n    </el-dialog>\n  \n  \n\n</div>\n</template>\n\n<script>\nimport QuestionShow from '../components/Show'\nimport ChapterShow from '../components/chapter'\nimport elUploadCustom from '../components/el-upload-custom'\nimport Ueditor from '@/components/Ueditor'\nimport { mapGetters, mapState, mapActions } from 'vuex'\nimport questionApi from '@/api/question'\n\n\n\nexport default {\n  name: 'app',\n  components: {\n    Ueditor, QuestionShow,elUploadCustom,ChapterShow\n  },\n  data () {\n    return {\n     \n      form: {\n        id: null,\n        questionType: 1,\n        gradeLevel: null,\n        subjectId: null,\n        title: '',\n        videoPath:'',\n        audioPath:'',\n        imagePath:'',\n        items: [\n          { prefix: 'A', content: '' },\n          { prefix: 'B', content: '' },\n          { prefix: 'C', content: '' },\n          { prefix: 'D', content: '' }\n        ],\n        analyze: '',\n        correct: '',\n        score: '',\n        difficult: 0,\n        chapterId:'',\n        secret:false,\n      },\n      subjectFilter: null,\n      formLoading: false,\n      rules: {\n        gradeLevel: [\n          { required: true, message: '请选择年级', trigger: 'change' }\n        ],\n        subjectId: [\n          { required: true, message: '请选择学科', trigger: 'change' }\n        ],\n        title: [\n          { required: true, message: '请输入题干', trigger: 'blur' }\n        ],\n        analyze: [\n          { required: true, message: '请输入解析', trigger: 'blur' }\n        ],\n        score: [\n          { required: true, message: '请输入分数', trigger: 'blur' }\n        ],\n        correct: [\n          { required: true, message: '请选择正确答案', trigger: 'change' }\n        ]\n      },\n      richEditor: {\n        dialogVisible: false,\n        object: null,\n        parameterName: '',\n        instance: null\n      },\n      questionShow: {\n        qType: 0,\n        dialog: false,\n        question: null,\n        loading: false\n      },\n      chapterShow:{\n        chapters:[],\n        newChapter:'',\n        loading: false,\n        queryCha:{\n          pageIndex:1,\n          pageSize:100,\n          subjectId:'',\n          gradeLevel:'',\n        },\n        queryNewCha:{\n          id:'',\n          name:'',\n          subjectId:'',\n          gradeLevel:'',\n          info:'',\n        },\n        chaId:[],\n        someShow:true\n      }\n    }\n  },\n  created () {\n    let id = this.$route.query.id\n    let _this = this\n    this.initSubject(function () {\n      _this.subjectFilter = _this.subjects\n    })\n    if (id && parseInt(id) !== 0) {\n      _this.formLoading = true\n      this.init(id)\n      \n    }\n\n    \n    \n  },\n  watch: {\n    'chapterShow.newChapter'(newVal){\n     // console.log(this.chapterShow.chapters)\n      \n      if(newVal){\n        if (this.chapterShow.chapters.includes(newVal)==false) {\n        this.newChapter=newVal;\n        this.postChapter()\n      }\n      }\n    },\n    subjectId(val){\n      console.log(val)\n      if(val){\n        console.log(val)\n        questionApi.chapterList(this.chapterShow.queryCha).then(re=>{\n        let list=re.response.list;\n        let list1=[];\n        //let chaId=[];\n        //去除空项\n        this.chaId=[]\n       for(let i=0;i<list.length;i++){\n         this.chaId.push(list[i].id)\n         if(list[i].name){\n           list1.push(list[i])\n         }\n       }\n        })\n      }\n    }\n  },\n  mounted () {\n   \n  },\n  \n  methods: {\n    async init(id){\n      let _this=this\n     await questionApi.select(id).then(re => {\n        this.form = re.response\n       this.chapterShow.queryNewCha.subjectId=this.form.subjectId;\n        this.chapterShow.queryCha.subjectId=this.form.subjectId;\n        // for(let i=0;i<re.response.list.length;i++){\n          this.chaId=[]\n         _this.chaId.push(re.response.chapterId)\n          _this.chapterShow.chapters.push(re.response)\n          this.getChapter()\n         \n     //  }\n       \n       \n        //解决已有知识点的显示问题，element-ui select组件会自动匹配 传入的值 和 value值,如果相等 则显示此value所对应的label值\n        this.chapterShow.newChapter=parseInt(this.form.chapterId)\n        this.formLoading = false\n      })\n     console.log(_this.chapterShow.chapters)\n       \n        \n    },\n    currStationChange(val) {\n      console.log('currStationChange', val)\n     \n      \n      if (val) {\n         this.chapterShow.queryNewCha.subjectId=val;\n        this.chapterShow.queryCha.subjectId=val;\n       // console.log(this.chapterShow.queryNewCha.subjectId)\n        this.getChapter()\n       // this.postChapter()\n      } \n},\n //change(){ this.$forceUpdate() }, \n\n\n    getChapter(){\n    questionApi.chapterList(this.chapterShow.queryCha).then(re=>{\n        let list=re.response.list;\n        let list1=[];\n        //let chaId=[];\n        //去除空项\n        this.chaId=[]\n       for(let i=0;i<list.length;i++){\n         this.chaId.push(list[i].id)\n         if(list[i].name){\n           list1.push(list[i])\n         }\n       }\n        \n        this.chapterShow.chapters=list1\n         this.form.chapterId=String(this.chapterShow.chapters[0].id)\n      //  console.log(this.chaId)\n    })\n},\npostChapter(){\n \n // console.log(this.newChapter)\n  //console.log(this.chaId)\n  if(this.newChapter!=''){\n    //解决知识点重复post\n    if(this.chaId.includes(Number(this.newChapter))==false){\n     \n      this.chapterShow.queryNewCha.name=this.newChapter\n   // \n    questionApi.insertChapter(this.chapterShow.queryNewCha).then(re=>{\n        if(re.code==1){\n            this.getChapter();\n           \n        }\n    })\n    \n    //console.log(this.form.chapterId)\n    \n   \n    //if()\n    }\n  }\n    \n},\ngetImage (ev, typer) {\n   let that = this\n   //获取上传文件标签\n   let filesId = document.getElementById('pop_image');\n   //获取音频标签\n   let imageId = document.getElementById('imageId')\n   //把当前files[0]传给getFileURL方法， getFileURL方法对其做一处理\n   //that.form.imagePath = this.getFileURL(filesId.files[0])\n   //console.log(that.form.imagePath)\n  // if (this.videoUrl) {\n    //给video标签设置src\n   //   videoId.src = this.videoUrl\n   //   console.log(videoId.src)\n  // }\n   let formData = new FormData();\n   formData.append(\"multipartFile\", filesId.files[0]);\n   questionApi.imagePost(formData).then(res => {\n    console.log(res)\n    if (res.code === 1) {\n     this.form.imagePath = 'http://47.97.152.219:8000'+res.response\n    }\n   })\n   console.log(this.form.imagePath)\n  },\n   getVideo (ev, typer) {\n   let that = this\n   //获取上传文件标签\n   let filesId = document.getElementById('pop_video');\n   //获取音频标签\n   let videoId = document.getElementById('videoId')\n   //把当前files[0]传给getFileURL方法， getFileURL方法对其做一处理\n   //that.form.videoPath = this.getFileURL(filesId.files[0])\n   //console.log(that.form.videoPath)\n  // if (this.videoUrl) {\n    //给video标签设置src\n   //   videoId.src = this.videoUrl\n   //   console.log(videoId.src)\n  // }\n   let formData = new FormData();\n   formData.append(\"multipartFile\", filesId.files[0]);\n   questionApi.videoPost(formData).then(res => {\n    console.log(res)\n    if (res.code === 1) {\n     this.form.videoPath = 'http://47.97.152.219:8000'+res.response\n    }\n    \n   })\n   console.log(url)\n  },\n  getAudio (ev, typer) {\n   let taht = this\n   //获取上传文件标签\n   let filesId = document.getElementById('pop_audio');\n   //获取音频标签\n   let audioId = document.getElementById('audioId')\n   //把当前files[0]传给getFileURL方法， getFileURL方法对其做一处理\n  // this.form.audioPath= this.getFileURL(filesId.files[0])\n\n   \n   let formData = new FormData();\n   formData.append(\"multipartFile\", filesId.files[0]);\n   questionApi.audioPost(formData).then(res => {\n   // console.log(res)\n    if (res.code === 1) {\n     this.form.audioPath = 'http://47.97.152.219:8000'+res.response\n    }\n   })\n   console.log(this.vidioUrl)\n  },\n  getFileURL (file) {\n   let getUrl = null\n   if (window.createObjectURL != undefined) {\n    //basic\n    getUrl = window.createObjectURL(file)\n   } else if (window.URL != undefined) {//window.URL 标准定义\n    //mozilla(firefox)\n    //获取一个http格式的url路径，这个时候就可以设置<img>中的显示\n    getUrl = window.URL.createObjectURL(file)\n   } else if (window.webkitURL != undefined) {//window.webkitURL是webkit的内核\n    //webkit or chrome\n    getUrl = window.webkitURL.createObjectURL(file)\n   }\n   return getUrl \n\n   //video 标签的 duration属性，获取当前视频的长度\n   // let duration = videoId.duration\n   // if (Math.floor(duration) > 60) {\n   //  that.layer.msg('视频不能大于60秒')\n   // } \n  },\n    editorReady (instance) {\n      this.richEditor.instance = instance\n      let currentContent = this.richEditor.object[this.richEditor.parameterName]\n      this.richEditor.instance.setContent(currentContent)\n      // 光标定位到Ueditor\n      this.richEditor.instance.focus(true)\n    },\n    inputClick (object, parameterName) {\n      this.richEditor.object = object\n      this.richEditor.parameterName = parameterName\n      this.richEditor.dialogVisible = true\n    },\n    editorConfirm () {\n      let content = this.richEditor.instance.getContent()\n      this.richEditor.object[this.richEditor.parameterName] = content\n      this.richEditor.dialogVisible = false\n    },\n    questionItemRemove (index) {\n      this.form.items.splice(index, 1)\n    },\n    questionItemAdd () {\n      let items = this.form.items\n      let last = items[items.length - 1]\n      let newLastPrefix = String.fromCharCode(last.prefix.charCodeAt() + 1)\n      items.push({ id: null, prefix: newLastPrefix, content: '' })\n    },\n    submitForm () {\n      let _this = this\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          this.formLoading = true\n          questionApi.edit(this.form).then(re => {\n            if (re.code === 1) {\n              console.log(this.form)\n              _this.$message.success(re.message)\n              _this.delCurrentView(_this).then(() => {\n                _this.$router.push('/exam/question/list')\n              })\n            } else {\n              _this.$message.error(re.message)\n              this.formLoading = false\n            }\n          }).catch(e => {\n            this.formLoading = false\n          })\n        } else {\n          return false\n        }\n      })\n    },\n    resetForm () {\n      this.$refs['form'].resetFields()\n      this.form = {\n        id: null,\n        questionType: 1,\n        gradeLevel: null,\n        subjectId: null,\n        title: '',\n        items: [\n          { prefix: 'A', content: '' },\n          { prefix: 'B', content: '' },\n          { prefix: 'C', content: '' },\n          { prefix: 'D', content: '' }\n        ],\n        analyze: '',\n        correct: '',\n        score: '',\n        difficult: 0\n      }\n    },\n    levelChange () {\n      this.form.subjectId = null\n      this.subjectFilter = this.subjects.filter(data => data.level === this.form.gradeLevel)\n    },\n    showQuestion () {\n      this.questionShow.dialog = true\n      this.questionShow.qType = this.form.questionType\n      this.questionShow.question = this.form\n    },\n    \n    ...mapActions('exam', { initSubject: 'initSubject' }),\n    ...mapActions('tagsView', { delCurrentView: 'delCurrentView' })\n  },\n  computed: {\n    ...mapGetters('enumItem', ['enumFormat']),\n    ...mapState('enumItem', {\n      questionTypeEnum: state => state.exam.question.typeEnum,\n      levelEnum: state => state.user.levelEnum\n    }),\n    ...mapState('exam', { subjects: state => state.subjects })\n  }\n}\n</script>\n\n"],"sourceRoot":"src/views/exam/question/edit"}]}