{"remainingRequest":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/babel-loader/lib/index.js!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/correct/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/correct/list.vue","mtime":1617531317640},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2N5bnRoaWFjaGVuL3Byb2plY3QvZ3JhZHVhdGlvbl9kZXNpZ24veHpzL3h6cy1teXNxbC9zb3VyY2UvdnVlL3h6cy1hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcFN0YXRlLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCc7CmltcG9ydCBQYWdpbmF0aW9uIGZyb20gJ0AvY29tcG9uZW50cy9QYWdpbmF0aW9uJzsKaW1wb3J0IHF1ZXN0aW9uQXBpIGZyb20gJ0AvYXBpL3F1ZXN0aW9uJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFBhZ2luYXRpb246IFBhZ2luYXRpb24KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBxdWVyeVBhcmFtOiB7CiAgICAgICAgaWQ6IG51bGwsCiAgICAgICAgcXVlc3Rpb25UeXBlOiBudWxsLAogICAgICAgIGxldmVsOiBudWxsLAogICAgICAgIHN1YmplY3RJZDogbnVsbCwKICAgICAgICBwYWdlSW5kZXg6IDEsCiAgICAgICAgcGFnZVNpemU6IDEwCiAgICAgIH0sCiAgICAgIHN1YmplY3RGaWx0ZXI6IG51bGwsCiAgICAgIGxpc3RMb2FkaW5nOiB0cnVlLAogICAgICB0YWJsZURhdGE6IFtdLAogICAgICB0b3RhbDogMCwKICAgICAgcXVlc3Rpb25TaG93OiB7CiAgICAgICAgcVR5cGU6IDAsCiAgICAgICAgZGlhbG9nOiBmYWxzZSwKICAgICAgICBxdWVzdGlvbjogbnVsbCwKICAgICAgICBsb2FkaW5nOiBmYWxzZQogICAgICB9CiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuaW5pdFN1YmplY3QoKTsKICAgIHRoaXMuc2VhcmNoKCk7CiAgfSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKHsKICAgIHN1Ym1pdEZvcm06IGZ1bmN0aW9uIHN1Ym1pdEZvcm0oKSB7CiAgICAgIHRoaXMucXVlcnlQYXJhbS5wYWdlSW5kZXggPSAxOwogICAgICB0aGlzLnNlYXJjaCgpOwogICAgfSwKICAgIHNlYXJjaDogZnVuY3Rpb24gc2VhcmNoKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlOwogICAgICBxdWVzdGlvbkFwaS5wYWdlTGlzdCh0aGlzLnF1ZXJ5UGFyYW0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICB2YXIgcmUgPSBkYXRhLnJlc3BvbnNlOwogICAgICAgIF90aGlzMi50YWJsZURhdGEgPSByZS5saXN0OwogICAgICAgIF90aGlzMi50b3RhbCA9IHJlLnRvdGFsOwogICAgICAgIF90aGlzMi5xdWVyeVBhcmFtLnBhZ2VJbmRleCA9IHJlLnBhZ2VOdW07CiAgICAgICAgX3RoaXMyLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGxldmVsQ2hhbmdlOiBmdW5jdGlvbiBsZXZlbENoYW5nZSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLnF1ZXJ5UGFyYW0uc3ViamVjdElkID0gbnVsbDsKICAgICAgdGhpcy5zdWJqZWN0RmlsdGVyID0gdGhpcy5zdWJqZWN0cy5maWx0ZXIoZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICByZXR1cm4gZGF0YS5sZXZlbCA9PT0gX3RoaXMzLnF1ZXJ5UGFyYW0ubGV2ZWw7CiAgICAgIH0pOwogICAgfSwKICAgIGFkZFF1ZXN0aW9uOiBmdW5jdGlvbiBhZGRRdWVzdGlvbigpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9leGFtL3F1ZXN0aW9uL2VkaXQvc2luZ2xlQ2hvaWNlJyk7CiAgICB9LAogICAgc2hvd1F1ZXN0aW9uOiBmdW5jdGlvbiBzaG93UXVlc3Rpb24ocm93KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnF1ZXN0aW9uU2hvdy5kaWFsb2cgPSB0cnVlOwogICAgICB0aGlzLnF1ZXN0aW9uU2hvdy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgcXVlc3Rpb25BcGkuc2VsZWN0KHJvdy5pZCkudGhlbihmdW5jdGlvbiAocmUpIHsKICAgICAgICBfdGhpcy5xdWVzdGlvblNob3cucVR5cGUgPSByZS5yZXNwb25zZS5xdWVzdGlvblR5cGU7CiAgICAgICAgX3RoaXMucXVlc3Rpb25TaG93LnF1ZXN0aW9uID0gcmUucmVzcG9uc2U7CiAgICAgICAgX3RoaXMucXVlc3Rpb25TaG93LmxvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgZWRpdFF1ZXN0aW9uOiBmdW5jdGlvbiBlZGl0UXVlc3Rpb24ocm93KSB7CiAgICAgIHZhciB1cmwgPSB0aGlzLmVudW1Gb3JtYXQodGhpcy5lZGl0VXJsRW51bSwgcm93LnF1ZXN0aW9uVHlwZSk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiB1cmwsCiAgICAgICAgcXVlcnk6IHsKICAgICAgICAgIGlkOiByb3cuaWQKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGRlbGV0ZVF1ZXN0aW9uOiBmdW5jdGlvbiBkZWxldGVRdWVzdGlvbihyb3cpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHF1ZXN0aW9uQXBpLmRlbGV0ZVF1ZXN0aW9uKHJvdy5pZCkudGhlbihmdW5jdGlvbiAocmUpIHsKICAgICAgICBpZiAocmUuY29kZSA9PT0gMSkgewogICAgICAgICAgX3RoaXMuc2VhcmNoKCk7CgogICAgICAgICAgX3RoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhyZS5tZXNzYWdlKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMuJG1lc3NhZ2UuZXJyb3IocmUubWVzc2FnZSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBxdWVzdGlvblR5cGVGb3JtYXR0ZXI6IGZ1bmN0aW9uIHF1ZXN0aW9uVHlwZUZvcm1hdHRlcihyb3csIGNvbHVtbiwgY2VsbFZhbHVlLCBpbmRleCkgewogICAgICByZXR1cm4gdGhpcy5lbnVtRm9ybWF0KHRoaXMucXVlc3Rpb25UeXBlLCBjZWxsVmFsdWUpOwogICAgfSwKICAgIHN1YmplY3RGb3JtYXR0ZXI6IGZ1bmN0aW9uIHN1YmplY3RGb3JtYXR0ZXIocm93LCBjb2x1bW4sIGNlbGxWYWx1ZSwgaW5kZXgpIHsKICAgICAgcmV0dXJuIHRoaXMuc3ViamVjdEVudW1Gb3JtYXQoY2VsbFZhbHVlKTsKICAgIH0KICB9LCBtYXBBY3Rpb25zKCdleGFtJywgewogICAgaW5pdFN1YmplY3Q6ICdpbml0U3ViamVjdCcKICB9KSksCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoJ2VudW1JdGVtJywgWydlbnVtRm9ybWF0J10pKSwgbWFwU3RhdGUoJ2VudW1JdGVtJywgewogICAgcXVlc3Rpb25UeXBlOiBmdW5jdGlvbiBxdWVzdGlvblR5cGUoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmV4YW0ucXVlc3Rpb24udHlwZUVudW07CiAgICB9LAogICAgZWRpdFVybEVudW06IGZ1bmN0aW9uIGVkaXRVcmxFbnVtKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5leGFtLnF1ZXN0aW9uLmVkaXRVcmxFbnVtOwogICAgfSwKICAgIGxldmVsRW51bTogZnVuY3Rpb24gbGV2ZWxFbnVtKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyLmxldmVsRW51bTsKICAgIH0KICB9KSksIG1hcEdldHRlcnMoJ2V4YW0nLCBbJ3N1YmplY3RFbnVtRm9ybWF0J10pKSwgbWFwU3RhdGUoJ2V4YW0nLCB7CiAgICBzdWJqZWN0czogZnVuY3Rpb24gc3ViamVjdHMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnN1YmplY3RzOwogICAgfQogIH0pKQp9Ow=="},{"version":3,"sources":["list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"queryParam\" ref=\"queryForm\" :inline=\"true\">\n      <el-form-item label=\"试卷ID：\">\n        <el-input v-model=\"queryParam.id\" clearable></el-input>\n      </el-form-item>\n      <el-form-item label=\"学院：\">\n        <el-select v-model=\"queryParam.level\" placeholder=\"年级\"  @change=\"levelChange\" clearable>\n          <el-option v-for=\"item in levelEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n        </el-select>\n      </el-form-item>\n   <el-form-item label=\"学科：\">\n        <el-select v-model=\"queryParam.subjectId\" clearable>\n          <el-option v-for=\"item in subjectFilter\" :key=\"item.id\" :value=\"item.id\"\n                     :label=\"item.name+' ( '+item.levelName+' )'\"></el-option>\n        </el-select>\n      </el-form-item>\n         <!--<el-form-item label=\"题型：\">\n        <el-select v-model=\"queryParam.questionType\" clearable>\n          <el-option v-for=\"item in questionType\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n        </el-select>\n      </el-form-item>-->\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm\">查询</el-button>\n        <el-popover placement=\"bottom\" trigger=\"click\">\n          <el-button type=\"warning\" size=\"mini\" v-for=\"item in editUrlEnum\" :key=\"item.key\"\n                     @click=\"$router.push({path:item.value})\">{{item.name}}\n          </el-button>\n         <!-- <el-button slot=\"reference\" type=\"primary\" class=\"link-left\">添加</el-button>-->\n        </el-popover>\n      </el-form-item>\n    </el-form>\n    <el-table v-loading=\"listLoading\" :data=\"tableData\" border fit highlight-current-row style=\"width: 100%\">\n      <el-table-column prop=\"id\" label=\"Id\" width=\"90px\"/>\n      <el-table-column prop=\"subjectId\" label=\"试卷名称\" :formatter=\"subjectFormatter\" width=\"120px\"/>\n      <el-table-column prop=\"questionType\" label=\"学生id\" :formatter=\"questionTypeFormatter\" width=\"70px\"/>\n      <el-table-column prop=\"shortTitle\" label=\"学生名字\" />\n      <!--   <el-table-column prop=\"shortTitle\" label=\"状态\" />\n   <el-table-column prop=\"score\" label=\"分数\" width=\"60px\"/>\n      <el-table-column prop=\"difficult\" label=\"难度\" width=\"60px\"/>\n      <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"160px\"/>-->\n      <el-table-column label=\"操作\" align=\"center\" width=\"220px\">\n        <template slot-scope=\"{row}\">\n               <router-link  :to=\"{path:'/correct',query:{id:row.id}}\" v-if=\"row.status === 1 \">\n                 <el-button   size=\"small\" >批改</el-button>\n               </router-link>\n               <router-link target=\"_blank\" :to=\"{path:'/read',query:{id:row.id}}\" v-if=\"row.status === 2 \">\n                 <el-button   size=\"small\">查看试卷</el-button>\n               </router-link>\n             </template>\n       <!-- <template slot-scope=\"{row}\">\n             <el-button size=\"mini\"   @click=\"showQuestion(row)\">批改</el-button>\n      <el-button size=\"mini\"  @click=\"editQuestion(row)\">批改</el-button>\n          <el-button size=\"mini\"  type=\"danger\" @click=\"deleteQuestion(row)\" class=\"link-left\">删除</el-button>\n        \n        </template>-->\n      </el-table-column>\n    </el-table>\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"queryParam.pageIndex\" :limit.sync=\"queryParam.pageSize\"\n                @pagination=\"search\"/>\n    <el-dialog :visible.sync=\"questionShow.dialog\" style=\"width: 100%;height: 100%\">\n      <QuestionShow :qType=\"questionShow.qType\" :question=\"questionShow.question\" :qLoading=\"questionShow.loading\"/>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState, mapActions } from 'vuex'\nimport Pagination from '@/components/Pagination'\n\nimport questionApi from '@/api/question'\n\nexport default {\n  components: { Pagination},\n  data () {\n    return {\n      queryParam: {\n        id: null,\n        questionType: null,\n        level: null,\n        subjectId: null,\n        pageIndex: 1,\n        pageSize: 10\n      },\n      subjectFilter: null,\n      listLoading: true,\n      tableData: [],\n      total: 0,\n      questionShow: {\n        qType: 0,\n        dialog: false,\n        question: null,\n        loading: false\n      }\n    }\n  },\n  created () {\n    this.initSubject()\n    this.search()\n  },\n  methods: {\n    submitForm () {\n      this.queryParam.pageIndex = 1\n      this.search()\n    },\n    search () {\n      this.listLoading = true\n      questionApi.pageList(this.queryParam).then(data => {\n        const re = data.response\n        this.tableData = re.list\n        this.total = re.total\n        this.queryParam.pageIndex = re.pageNum\n        this.listLoading = false\n      })\n    },\n    levelChange () {\n      this.queryParam.subjectId = null\n      this.subjectFilter = this.subjects.filter(data => data.level === this.queryParam.level)\n    },\n    addQuestion () {\n      this.$router.push('/exam/question/edit/singleChoice')\n    },\n   showQuestion (row) {\n      let _this = this\n      this.questionShow.dialog = true\n      this.questionShow.loading = true\n      questionApi.select(row.id).then(re => {\n        _this.questionShow.qType = re.response.questionType\n        _this.questionShow.question = re.response\n        _this.questionShow.loading = false\n      })\n    },\n    editQuestion (row) {\n      let url = this.enumFormat(this.editUrlEnum, row.questionType)\n      this.$router.push({ path: url, query: { id: row.id } })\n    },\n    deleteQuestion (row) {\n      let _this = this\n      questionApi.deleteQuestion(row.id).then(re => {\n        if (re.code === 1) {\n          _this.search()\n          _this.$message.success(re.message)\n        } else {\n          _this.$message.error(re.message)\n        }\n      })\n    },\n    questionTypeFormatter (row, column, cellValue, index) {\n      return this.enumFormat(this.questionType, cellValue)\n    },\n    subjectFormatter (row, column, cellValue, index) {\n      return this.subjectEnumFormat(cellValue)\n    },\n    ...mapActions('exam', { initSubject: 'initSubject' })\n  },\n  computed: {\n    ...mapGetters('enumItem', ['enumFormat']),\n    ...mapState('enumItem', {\n      questionType: state => state.exam.question.typeEnum,\n      editUrlEnum: state => state.exam.question.editUrlEnum,\n      levelEnum: state => state.user.levelEnum\n    }),\n    ...mapGetters('exam', ['subjectEnumFormat']),\n    ...mapState('exam', { subjects: state => state.subjects })\n  }\n}\n</script>\n"],"sourceRoot":"src/views/correct"}]}