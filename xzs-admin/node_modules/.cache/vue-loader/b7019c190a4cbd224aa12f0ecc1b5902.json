{"remainingRequest":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/exam/question/components/el-upload-custom.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/exam/question/components/el-upload-custom.vue","mtime":1619859299472},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["el-upload-custom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"el-upload-custom.vue","sourceRoot":"src/views/exam/question/components","sourcesContent":["<template>\n    <div>\n        <el-upload :class=\"(listType=='single' && !$slots.default)? 'avatar-uploader':''\" :action=\"url\"\n                   :headers=\"headers\" :data=\"data\" :multiple=\"multiple\" :name=\"name\" :drag=\"drag\"\n                   :with-credentials=\"withCredentials\" :disabled=\"disabled\" :limit=\"limit\"\n                   :show-file-list=\"isShowFileList\" :list-type=\"customListType\" :fileList=\"fileList\"\n                   :auto-upload=\"autoUpload\" :http-request=\"httpRequest\"\n                   :before-upload=\"handleBeforeUpload\"\n                   :on-success=\"handleSuccess\"\n                   :on-exceed=\"handleExceed\"\n                   :on-error=\"handleError\"\n                   :on-preview=\"handlePreview\"\n                   :on-change=\"handleChange\"\n                   :on-progress=\"handleProgress\"\n                   :before-remove=\"handleBeforeRemove\"\n                   :on-remove=\"handleRemove\">\n            <template v-if=\"drag && !$slots.default\">\n                <i class=\"el-icon-upload\"></i>\n                <div class=\"el-upload__text\">\n                    {{$t('pages.common.dragFilesHere')}}<em>{{$t('pages.common.clickUpload')}}</em></div>\n            </template>\n            <!--单图片上传-->\n            <template v-else-if=\"listType=='single' && !$slots.default\">\n                <el-image v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\"></el-image>\n                <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n            </template>\n            <template v-else-if=\"(listType=='picture-card' || listType=='video') && !$slots.default\">\n                <i class=\"el-icon-plus\"></i>\n            </template>\n            <template v-else-if=\"!$slots.default\">\n                <el-button size=\"small\" type=\"primary\">{{$t('pages.common.clickUpload')}}</el-button>\n            </template>\n            <slot></slot>\n            <template slot=\"file\" slot-scope=\"{file}\" v-if=\"listType=='video'\">\n                <el-progress v-if=\"file.status === 'uploading'\" type=\"circle\"\n                             :stroke-width=\"6\"\n                             :percentage=\"parsePercentage(file.percentage)\">\n                </el-progress>\n                <div class=\"el-upload-list__item-thumbnail\" v-if=\"file\">\n                    <video class=\"el-upload-list__item-thumbnail\" :src=\"file.url\"></video>\n                    <span class=\"el-upload-list__item-actions\">\n                      <span class=\"el-upload-list__item-preview\"\n                            @click=\"handlePreview(file)\">\n                        <i class=\"sx-icon-video\" style=\"font-size: 19px\"></i>\n                      </span>\n                      <span class=\"el-upload-list__item-delete\">\n                        <i class=\"el-icon-delete\" @click=\"handleRemove(file,fileList)\"></i>\n                      </span>\n                    </span>\n                </div>\n            </template>\n        </el-upload>\n        <!-- 查看大图   -->\n        <el-dialog title=\"大图预览\" :visible.sync=\"dialogImageVisible\" append-to-body>\n            <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"大图\">\n        </el-dialog>\n        <!--观看视频-->\n        <el-dialog title=\"赏析视频\" :visible.sync=\"dialogVideoVisible\" @close=\"handlePause\" append-to-body>\n            <video ref=\"video\" style=\"width: 100%; height: 100%; display: block; outline: none;\" :src=\"dialogVideoUrl\"\n                   controls\n                   autoplay></video>\n        </el-dialog>\n        <!--试听音频-->\n        <el-dialog title=\"试听音频\" :visible.sync=\"dialogAudioVisible\" @close=\"handlePause\" append-to-body>\n            <audio ref=\"audio\" style=\"width: 100%; height: 50px; display: block; outline: none;\" :src=\"dialogAudioUrl\"\n                   controls\n                   autoplay></audio>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n    import isEqual from 'lodash/isEqual'\n\n    /*自定义上传 - element-ui上传再封装*/\n    export default {\n        name: \"ElUploadCustom\",\n        data() {\n            return {\n                dialogImageVisible: false,\n                dialogImageUrl: null,\n                dialogVideoVisible: false,\n                dialogVideoUrl: null,\n                dialogAudioVisible: false,\n                dialogAudioUrl: null,\n                imageUrl: ''\n            }\n        },\n        model: {\n            prop: 'value',\n            event: 'change'\n        },\n        props: {\n           value:{\n                type: Array,\n                default() {\n                    return [];\n                }\n            },\n            action: {\n                type: String,\n                required: true\n            },\n            headers: {\n                type: Object,\n                default() {\n                    return {};\n                }\n            },\n            data: Object,\n            multiple: Boolean,\n            name: {\n                type: String,\n                default: 'file'\n            },\n            drag: Boolean,\n            accept: String,\n            flieSize: Number,\n            withCredentials: Boolean,\n            showFileList: {\n                type: Boolean,\n                default: true\n            },\n            listType: {\n                type: String,\n                default: 'text' // text,picture,picture-card single:单图片上传 video：上传视频 audio: 上传音频\n            },\n            disabled: Boolean,\n            limit: Number,\n            fileList: {\n                type: Array,\n                default() {\n                    return [];\n                }\n            },\n            autoUpload: {\n                type: Boolean,\n                default: true\n            },\n            httpRequest: Function,\n            beforeUpload: Function,\n            beforeRemove: Function,\n            onRemove: Function,\n            onChange: Function,\n            onPreview: Function,\n            onSuccess: Function,\n            onProgress: Function,\n            onError: Function,\n            onExceed: Function\n        },\n        watch: {\n            fileList: {\n                handler: function (val) {\n                    if (this.listType == 'single') {\n                        this.imageUrl = val.length ? val[0].url : '';\n                    }\n                },\n                immediate: true\n            }\n        },\n        computed: {\n            url() {\n                if (/^((https|http|ftp|rtsp|mms)?:\\/\\/)[^\\s]+/.test(this.action)) {\n                    return this.action\n                } else {\n                    if (typeof this.httpRequest == \"function\") {\n                        return '#';\n                    } else {\n                        return this.$http.defaults.baseURL + this.action;\n                    }\n                }\n            },\n            isShowFileList() {\n                if (this.listType == 'single') {\n                    return false;\n                } else {\n                    return this.showFileList;\n                }\n            },\n            customListType() {\n                if (this.listType == 'single' || this.listType == 'audio') {\n                    return 'text';\n                } else if (this.listType == 'video') {\n                    return 'picture-card';\n                } else {\n                    return this.listType\n                }\n            }\n        },\n        methods: {\n            //文件上传前事件\n            handleBeforeUpload(file) {\n                if (this.beforeUpload) {\n                    return this.beforeUpload(file);\n                } else {\n                    //判断文件类型\n                    const typeLimit = this.accept ? this.accept.split(',').includes(file.type) : true;\n                    //判断文件大小\n                    const sizeLinit = this.flieSize ? file.size / 1024 < this.flieSize : true;\n                    if (!typeLimit) {\n                        this.$message.error(this.$t('pages.common.uploadFileType', {type: this.accept}));\n                    }\n                    if (!sizeLinit) {\n                        let flieSize = this.flieSize > 1024 ? parseInt(this.flieSize / 1024) + 'M' + this.flieSize % 1024 : this.flieSize;\n                        this.$message.error(this.$t('pages.common.uploadFileSize', {size: flieSize}));\n                    }\n                    return typeLimit && sizeLinit;\n                }\n            },\n            //文件上传超出限制事件\n            handleExceed(files, fileList) {\n                if (this.onExceed) {\n                    this.onExceed(files, fileList);\n                } else {\n                    this.$message.error(this.$t('pages.common.uploadFileNumber', {number: this.limit}))\n                }\n            },\n            //上传进度事件\n            handleProgress(event, file, fileList) {\n                if (this.onProgress) {\n                    this.onProgress(event, file, fileList)\n                }\n            },\n            //上传成功事件\n            handleSuccess(res, file, fileList) {\n                if (this.onSuccess) {\n                    this.onSuccess(res, file, fileList);\n                } else {\n                    if (!res.code) {\n                        if (this.listType == 'single') {\n                            file.url = res.data;\n                            this.imageUrl = res.data;\n                            this.$emit('change', [file]);\n                        } else {\n                            fileList.forEach(item => {\n                                if (isEqual(item, file)) {\n                                    item.url = res.data\n                                }\n                            });\n                            this.$emit('change', fileList);\n                        }\n                    } else {\n                        this.handleRemove(file, fileList);\n                        this.$message.error(this.$t('pages.common.uploadFileError'));\n                    }\n                }\n            },\n            //预览事件\n            handlePreview(file) {\n                if (this.onPreview) {\n                    this.onPreview(file);\n                } else {\n                    if (this.listType == 'audio') {\n                        this.dialogAudioUrl = file.url;\n                        this.dialogAudioVisible = true;\n                        if (this.$refs.video) {\n                            this.$refs.video.remove()\n                        }\n                    } else if (this.listType == 'video') {\n                        this.dialogVideoUrl = file.url;\n                        this.dialogVideoVisible = true;\n                        if (this.$refs.audio) {\n                            this.$refs.audio.remove()\n                        }\n                    } else {\n                        //没有提供文件类型就下载判定\n                        if (!file.raw) {\n                            let xhr = new XMLHttpRequest();\n                            xhr.open(\"GET\", file.url, true);\n                            xhr.responseType = \"blob\";\n                            xhr.onload = () => {\n                                file.raw = xhr.response\n                                //判断当前点击文件是否为图片类型 是显示大图预览\n                                if (['image/png', 'image/jpeg', 'image/gif', 'application/x-jpg', 'application/x-png'].includes(file.raw.type)) {\n                                    this.dialogImageUrl = file.url;\n                                    this.dialogImageVisible = true;\n                                }\n                                //判断当前点击文件是否为音频类型 是显示试听音频\n                                if (['audio/mp3'].includes(file.raw.type)) {\n                                    this.dialogAudioUrl = file.url;\n                                    this.dialogAudioVisible = true;\n                                }\n                                //判断当前点击文件是否为视频类型 是显示赏析视频\n                                if (['video/mp4'].includes(file.raw.type)) {\n                                    this.dialogVideoUrl = file.url;\n                                    this.dialogVideoVisible = true;\n                                }\n                            };\n                            xhr.send();\n                        } else {\n                            //判断当前点击文件是否为图片类型 是显示大图预览\n                            if (['image/png', 'image/jpeg', 'image/gif'].includes(file.raw.type)) {\n                                this.dialogImageUrl = file.url;\n                                this.dialogImageVisible = true;\n                            }\n                            //判断当前点击文件是否为音频类型 是显示试听音频\n                            if (['audio/mp3'].includes(file.raw.type)) {\n                                this.dialogAudioUrl = file.url;\n                                this.dialogAudioVisible = true;\n                            }\n                            //判断当前点击文件是否为视频类型 是显示赏析视频\n                            if (['video/mp4'].includes(file.raw.type)) {\n                                this.dialogVideoUrl = file.url;\n                                this.dialogVideoVisible = true;\n                            }\n                        }\n                    }\n                }\n            },\n            //上传失败事件\n            handleError(err, file, fileList) {\n                if (this.onError) {\n                    this.onError(err, file, fileList);\n                } else {\n                    this.handleRemove(file, fileList);\n                    this.$message.error(this.$t('pages.common.uploadFileError'));\n                }\n            },\n            //文件移除前事件\n            handleBeforeRemove(file, fileList) {\n                if (this.beforeRemove) {\n                    this.beforeRemove(file, fileList);\n                }\n\n            },\n            //删除事件\n            handleRemove(file, fileList) {\n                if (this.onRemove) {\n                    this.onRemove(file, fileList);\n                } else {\n                    let index = fileList.findIndex(item => item.uid == file.uid);\n                    if (index != -1) {\n                        fileList.splice(index, 1);\n                    }\n                    this.$emit('change', fileList);\n                }\n            },\n            //文件状态改变事件\n            handleChange(file, fileList) {\n                if (this.onChange) {\n                    this.onChange(file, fileList);\n                }\n            },\n            //暂停播放音频视频\n            handlePause() {\n                if (this.$refs.audio) {\n                    this.$refs.audio.pause();\n                    this.dialogAudioVisible = false;\n                }\n                if (this.$refs.video) {\n                    this.$refs.video.pause();\n                    this.dialogVideoVisible = false;\n                }\n            },\n            //进度百分比\n            parsePercentage(val) {\n                return parseInt(val, 10);\n            },\n        },\n        created() {\n        }\n    }\n</script>\n\n<style scoped>\n    .avatar-uploader >>> .el-upload {\n        border: 1px dashed #d9d9d9;\n        border-radius: 6px;\n        cursor: pointer;\n        position: relative;\n        overflow: hidden;\n    }\n\n    .avatar-uploader .el-upload:hover {\n        border-color: #409EFF;\n    }\n\n    .avatar-uploader-icon {\n        font-size: 28px;\n        color: #8c939d;\n        width: 178px;\n        height: 178px;\n        line-height: 178px;\n        text-align: center;\n    }\n\n    .avatar {\n        width: 178px;\n        height: 178px;\n        display: block;\n    }\n</style>\n"]}]}