{"remainingRequest":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/exam/question/edit/gap-filling.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/exam/question/edit/gap-filling.vue","mtime":1622108001301},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["gap-filling.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"gap-filling.vue","sourceRoot":"src/views/exam/question/edit","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"form\" ref=\"form\" label-width=\"100px\" v-loading=\"formLoading\"  :rules=\"rules\">\n      <el-form-item label=\"班级：\" prop=\"gradeLevel\" required>\n        <el-select v-model=\"form.gradeLevel\" placeholder=\"年级\" @change=\"levelChange\">\n          <el-option v-for=\"item in levelEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"课程：\" prop=\"subjectId\" required>\n        <el-select v-model=\"form.subjectId\" placeholder=\"课程\" @change=\"currStationChange\">\n          <el-option v-for=\"item in subjectFilter\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name+' ( '+item.levelName+' )'\"></el-option>\n        </el-select>\n      </el-form-item>\n       <el-form-item label=\"考试题目：\" prop=\"secret\" required>\n          <el-radio-group v-model=\"form.secret\">\n            <el-radio :label=\"true\">是</el-radio>\n            <el-radio :label=\"false\">否</el-radio>\n        </el-radio-group>\n       </el-form-item>\n      <el-form-item label=\"题干：\" prop=\"title\" required>\n        <el-input v-model=\"form.title\"   @focus=\"inputClick(form,'title')\" />\n          <div class=\"upLoad\">\n              <label for=\"pop_image\" id=\"labelr\">\n        <img v-if='form.imagePath' id=\"videoId\" :src='form.imagePath' width=\"100%\"/>\n        <div class=\"flexRow\">\n        <div class=\"inputImage\">上传图片:</div>\n        <input  id=\"pop_image\" type=\"file\" accept=\"image/*\" capture=\"camcorder\" v-on:change=\"getImage(event, '2')\" name=\"fileTrans\" ref=\"file\" value=\"\">\n        </div>\n      </label>\n     </div>\n        <div class=\"upLoad\">\n              <label for=\"pop_video\" id=\"labelr\">\n        <video v-if='form.videoPath' id=\"videoId\" :src='form.videoPath' controls width=\"100%\"></video>\n        <div class=\"flexRow\">\n         <div class=\"inputVideo\">上传视频:</div>\n        <input  id=\"pop_video\" type=\"file\" accept=\"video/*\" capture=\"camcorder\" v-on:change=\"getVideo(event, '2')\" name=\"fileTrans\" ref=\"file\" value=\"上传视频\">\n       </div>\n      </label>\n     </div>\n  \n  <div class=\"upLoad\">\n   <label for=\"pop_audio\" id=\"labelr\">\n    <audio v-if='form.audioPath' id=\"audioId\" :src='form.audioPath' controls width=\"100%\"></audio>\n    <div class=\"flexRow\">\n     <div class=\"inputAudio\">上传音频:</div>\n    <input  id=\"pop_audio\" type=\"file\" accept=\"audio/*\" capture=\"camcorder\" v-on:change=\"getAudio(event, '2')\" name=\"fileTrans\" ref=\"file\" value=\"\">\n    </div>\n   </label>\n  </div>\n      </el-form-item>\n      <el-form-item label=\"填空答案：\" required>\n        <el-form-item :label=\"item.prefix\" :key=\"item.prefix\"  v-for=\"item in form.items\"  label-width=\"50px\" class=\"question-item-label\">\n          <el-input v-model=\"item.content\"   @focus=\"inputClick(item,'content')\"  class=\"question-item-content-input\"  style=\"width: 80%\"/>\n          <span class=\"question-item-span\">分数：</span><el-input-number v-model=\"item.score\" :precision=\"1\" :step=\"1\" :max=\"100\"  ></el-input-number>\n        </el-form-item>\n      </el-form-item>\n      <el-form-item label=\"解析：\" prop=\"analyze\" required>\n        <el-input v-model=\"form.analyze\"  @focus=\"inputClick(form,'analyze')\" />\n      </el-form-item>\n      <el-form-item label=\"分数：\" prop=\"score\" required>\n        <el-input-number v-model=\"form.score\" :precision=\"1\" :step=\"1\" :max=\"100\"></el-input-number>\n      </el-form-item>\n      <el-form-item label=\"难度：\" required>\n        <el-rate v-model=\"form.difficult\" class=\"question-item-rate\"></el-rate>\n      </el-form-item>\n       <el-form-item prop=\"chapterId\" label=\"知识点\">\n      <!--  <ChapterShow :chapters=\"chapterShow.chapters\" :newCha=\"chapterShow.newCha\" :qLoading=\"chapterShow.loading\" @postchapter=\"postChapter\"/>\n      -->\n      <el-select\n    v-model=\"chapterShow.newChapter\"\n    \n    filterable\n    allow-create\n    default-first-option\n    placeholder=\"请选择知识点\"\n   \n    >\n    <el-option\n      v-for=\"item in chapterShow.chapters\"\n      :key=\"item.id\"\n      :label=\"item.name\"\n      :value=\"item.id\">\n    </el-option>\n  </el-select>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\n        <el-button @click=\"resetForm\">重置</el-button>\n        <el-button type=\"success\" @click=\"showQuestion\">预览</el-button>\n      </el-form-item>\n    </el-form>\n    <el-dialog  :visible.sync=\"richEditor.dialogVisible\"  append-to-body :close-on-click-modal=\"false\" style=\"width: 100%;height: 100%\"   :show-close=\"false\" center>\n      <Ueditor @ready=\"editorReady\"/>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"editorConfirm\">确 定</el-button>\n        <el-button @click=\"richEditor.dialogVisible = false\">取 消</el-button>\n      </span>\n    </el-dialog>\n    <el-dialog :visible.sync=\"questionShow.dialog\" style=\"width: 100%;height: 100%\">\n      <QuestionShow :qType=\"questionShow.qType\" :question=\"questionShow.question\" :qLoading=\"questionShow.loading\"/>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport QuestionShow from '../components/Show'\nimport Ueditor from '@/components/Ueditor'\nimport { mapGetters, mapState, mapActions } from 'vuex'\nimport questionApi from '@/api/question'\n\nexport default {\n  components: {\n    Ueditor, QuestionShow\n  },\n  data () {\n    return {\n      form: {\n        id: null,\n        questionType: 4,\n        gradeLevel: null,\n        subjectId: null,\n        title: '',\n        videoPath:'',\n        audioPath:'',\n        imagePath:'',\n        items: [\n        ],\n        analyze: '',\n        correct: '',\n        score: '',\n        difficult: 0,\n        chapterId:'',\n       secret:false,\n      },\n      subjectFilter: null,\n      formLoading: false,\n      rules: {\n        gradeLevel: [\n          { required: true, message: '请选择年级', trigger: 'change' }\n        ],\n        subjectId: [\n          { required: true, message: '请选择学科', trigger: 'change' }\n        ],\n        title: [\n          { required: true, message: '请输入题干', trigger: 'blur' }\n        ],\n        analyze: [\n          { required: true, message: '请输入解析', trigger: 'blur' }\n        ],\n        score: [\n          { required: true, message: '请输入分数', trigger: 'blur' }\n        ]\n      },\n      richEditor: {\n        dialogVisible: false,\n        object: null,\n        parameterName: '',\n        instance: null\n      },\n      questionShow: {\n        qType: 0,\n        dialog: false,\n        question: null,\n        loading: false\n      },\n      chapterShow:{\n        chapters:[],\n        newChapter:'',\n        loading: false,\n        queryCha:{\n          pageIndex:1,\n          pageSize:100,\n          subjectId:'',\n          gradeLevel:'',\n        },\n        queryNewCha:{\n          id:'',\n          name:'',\n          subjectId:'',\n          gradeLevel:'',\n          info:'',\n        },\n        chaId:[],\n        someShow:true\n      }\n    }\n  },\n  created () {\n    let id = this.$route.query.id\n    let _this = this\n    this.initSubject(function () {\n      _this.subjectFilter = _this.subjects\n    })\n    if (id && parseInt(id) !== 0) {\n      _this.formLoading = true\n      this.init(id)\n      \n    }\n\n    \n    \n  },\n  watch: {\n    'chapterShow.newChapter'(newVal){\n      if(newVal){\n        this.newChapter=newVal;\n        this.postChapter()\n      }\n    }\n  },\n  methods: {\n     async init(id){\n     await questionApi.select(id).then(re => {\n        this.form = re.response\n       this.chapterShow.queryNewCha.subjectId=this.form.subjectId;\n        this.chapterShow.queryCha.subjectId=this.form.subjectId;\n        //解决已有知识点的显示问题，element-ui select组件会自动匹配 传入的值 和 value值,如果相等 则显示此value所对应的label值\n        this.chapterShow.newChapter=parseInt(this.form.chapterId)\n        this.formLoading = false\n      })\n     \n       \n        \n    },\n    currStationChange(val) {\n      console.log('currStationChange', val)\n      if (val) {\n         this.chapterShow.queryNewCha.subjectId=val;\n        this.chapterShow.queryCha.subjectId=val;\n       // console.log(this.chapterShow.queryNewCha.subjectId)\n        this.getChapter()\n       // this.postChapter()\n      } \n},\n //change(){ this.$forceUpdate() }, \n\n\n    getChapter(){\n    questionApi.chapterList(this.chapterShow.queryCha).then(re=>{\n        let list=re.response.list;\n        let list1=[];\n        //let chaId=[];\n        //去除空项\n        this.chaId=[]\n       for(let i=0;i<list.length;i++){\n         this.chaId.push(list[i].id)\n         if(list[i].name){\n           list1.push(list[i])\n         }\n       }\n        \n        this.chapterShow.chapters=list1\n         this.form.chapterId=String(this.chapterShow.chapters[0].id)\n      //  console.log(this.chaId)\n    })\n},\npostChapter(){\n  //console.log(val)\n if(this.newChapter!=''){\n    //解决知识点重复post\n    if(this.chaId.includes(Number(this.newChapter))==false){\n      this.chapterShow.queryNewCha.name=this.newChapter\n   // \n    questionApi.insertChapter(this.chapterShow.queryNewCha).then(re=>{\n        if(re.code==1){\n            this.getChapter();\n           \n        }\n    })\n    \n    //console.log(this.form.chapterId)\n    \n   \n    //if()\n    }\n  }\n    \n},\ngetImage (ev, typer) {\n   let that = this\n   //获取上传文件标签\n   let filesId = document.getElementById('pop_image');\n   //获取音频标签\n   let imageId = document.getElementById('imageId')\n   //把当前files[0]传给getFileURL方法， getFileURL方法对其做一处理\n   that.form.imagePath = this.getFileURL(filesId.files[0])\n   console.log(that.form.imagePath)\n  // if (this.videoUrl) {\n    //给video标签设置src\n   //   videoId.src = this.videoUrl\n   //   console.log(videoId.src)\n  // }\n   let formData = new FormData();\n   formData.append(\"multipartFile\", filesId.files[0]);\n   questionApi.imagePost(formData).then(res => {\n    console.log(res)\n    if (res.code === 1) {\n     this.form.imagePath = 'http://47.97.152.219:8000'+res.response\n    }\n   })\n   console.log(url)\n  },\n   getVideo (ev, typer) {\n   let that = this\n   //获取上传文件标签\n   let filesId = document.getElementById('pop_video');\n   //获取音频标签\n   let videoId = document.getElementById('videoId')\n   //把当前files[0]传给getFileURL方法， getFileURL方法对其做一处理\n   that.form.videoPath = this.getFileURL(filesId.files[0])\n   console.log(that.form.videoPath)\n  // if (this.videoUrl) {\n    //给video标签设置src\n   //   videoId.src = this.videoUrl\n   //   console.log(videoId.src)\n  // }\n   let formData = new FormData();\n   formData.append(\"multipartFile\", filesId.files[0]);\n   questionApi.videoPost(formData).then(res => {\n    console.log(res)\n    if (res.code === 1) {\n     this.form.videoPath = 'http://47.97.152.219:8000'+res.response\n     console.log(this.form.videoPath)\n    }\n   })\n   console.log(url)\n  },\n  getAudio (ev, typer) {\n   let taht = this\n   //获取上传文件标签\n   let filesId = document.getElementById('pop_audio');\n   //获取音频标签\n   let audioId = document.getElementById('audioId')\n   //把当前files[0]传给getFileURL方法， getFileURL方法对其做一处理\n   this.form.audioPath= this.getFileURL(filesId.files[0])\n\n   \n   let formData = new FormData();\n   formData.append(\"multipartFile\", filesId.files[0]);\n   questionApi.audioPost(formData).then(res => {\n    console.log(res)\n    if (res.code === 1) {\n     this.form.audioPath = 'http://47.97.152.219:8000'+res.response\n    }\n   })\n   console.log(this.vidioUrl)\n  },\n  getFileURL (file) {\n   let getUrl = null\n   if (window.createObjectURL != undefined) {\n    //basic\n    getUrl = window.createObjectURL(file)\n   } else if (window.URL != undefined) {//window.URL 标准定义\n    //mozilla(firefox)\n    //获取一个http格式的url路径，这个时候就可以设置<img>中的显示\n    getUrl = window.URL.createObjectURL(file)\n   } else if (window.webkitURL != undefined) {//window.webkitURL是webkit的内核\n    //webkit or chrome\n    getUrl = window.webkitURL.createObjectURL(file)\n   }\n   return getUrl \n\n   //video 标签的 duration属性，获取当前视频的长度\n   // let duration = videoId.duration\n   // if (Math.floor(duration) > 60) {\n   //  that.layer.msg('视频不能大于60秒')\n   // } \n  },\n    editorReady (instance) {\n      this.richEditor.instance = instance\n      let currentContent = this.richEditor.object[this.richEditor.parameterName]\n      this.richEditor.instance.setContent(currentContent)\n      // 光标定位到Ueditor\n      this.richEditor.instance.focus(true)\n    },\n    inputClick (object, parameterName) {\n      this.richEditor.object = object\n      this.richEditor.parameterName = parameterName\n      this.richEditor.dialogVisible = true\n    },\n    editorConfirm () {\n      let content = this.richEditor.instance.getContent()\n      if (this.richEditor.parameterName === 'title') { // 题干的正确答案重置\n        if (this.questionItemReset(content)) {\n          this.richEditor.object[this.richEditor.parameterName] = content\n          this.richEditor.dialogVisible = false\n        } else {\n\n        }\n      } else {\n        this.richEditor.object[this.richEditor.parameterName] = content\n        this.richEditor.dialogVisible = false\n      }\n    },\n    questionItemReset (content) {\n      let spanRegex = new RegExp('<span class=\"gapfilling-span (.*?)\">(.*?)<\\\\/span>', 'g')\n      let _this = this\n      let newFormItem = []\n      let gapfillingItems = content.match(spanRegex)\n      if (gapfillingItems === null) {\n        this.$message.error('请插入填空')\n        return false\n      }\n      gapfillingItems.forEach(function (span, index) {\n        let pairRegex = /<span class=\"gapfilling-span (.*?)\">(.*?)<\\/span>/\n        pairRegex.test(span)\n        newFormItem.push({ id: null, prefix: RegExp.$2, content: '', score: '0' })\n      })\n\n      newFormItem.forEach(function (item) {\n        _this.form.items.some((oldItem, index) => {\n          if (oldItem.itemUuid === item.itemUuid) {\n            item.content = oldItem.content\n            item.id = oldItem.id\n            item.score = oldItem.score\n            return true\n          }\n        })\n      })\n      _this.form.items = newFormItem\n      return true\n    },\n    submitForm () {\n      let _this = this\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          this.formLoading = true\n          questionApi.edit(this.form).then(re => {\n            if (re.code === 1) {\n              _this.$message.success(re.message)\n              _this.delCurrentView(_this).then(() => {\n                _this.$router.push('/exam/question/list')\n              })\n            } else {\n              _this.$message.error(re.message)\n              this.formLoading = false\n            }\n          }).catch(e => {\n            this.formLoading = false\n          })\n        } else {\n          return false\n        }\n      })\n    },\n    levelChange () {\n      this.form.subjectId = null\n      this.subjectFilter = this.subjects.filter(data => data.level === this.form.gradeLevel)\n    },\n    showQuestion () {\n      this.questionShow.dialog = true\n      this.questionShow.qType = this.form.questionType\n      this.questionShow.question = this.form\n    },\n    resetForm () {\n      let lastId = this.form.id\n      this.$refs['form'].resetFields()\n      this.form = {\n        id: null,\n        questionType: 4,\n        gradeLevel: null,\n        subjectId: null,\n        title: '',\n        items: [\n        ],\n        analyze: '',\n        correct: '',\n        score: '',\n        difficult: 0\n      }\n      this.form.id = lastId\n    },\n    ...mapActions('exam', { initSubject: 'initSubject' }),\n    ...mapActions('tagsView', { delCurrentView: 'delCurrentView' })\n  },\n  computed: {\n    ...mapGetters('enumItem', ['enumFormat']),\n    ...mapState('enumItem', {\n      questionTypeEnum: state => state.exam.question.typeEnum,\n      levelEnum: state => state.user.levelEnum\n    }),\n    ...mapState('exam', { subjects: state => state.subjects })\n  }\n}\n</script>\n"]}]}