{"remainingRequest":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/exam/paper/edit.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/exam/paper/edit.vue","mtime":1622549311194},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5leGFtcGFwZXItaXRlbS1ib3ggewogIC5xLXRpdGxlIHsKICAgIG1hcmdpbjogMHB4IDVweCAwcHggNXB4OwogIH0KICAucS1pdGVtLWNvbnRlbnQgewogIH0KfQo="},{"version":3,"sources":["edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA05BA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit.vue","sourceRoot":"src/views/exam/paper","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"form\" ref=\"form\" label-width=\"100px\" v-loading=\"formLoading\" :rules=\"rules\">\n      <el-form-item label=\"班级：\" prop=\"level\" required>\n        <el-select v-model=\"form.level\" placeholder=\"年级\"  @change=\"levelChange\">\n          <el-option v-for=\"item in levelEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"课程：\" prop=\"subjectId\" required>\n        <el-select v-model=\"form.subjectId\" placeholder=\"学科\">\n          <el-option v-for=\"item in subjectFilter\" :key=\"item.id\" :value=\"item.id\"\n                     :label=\"item.name+' ( '+item.levelName+' )'\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"试卷类型：\" prop=\"paperType\" required>\n        <el-select v-model=\"form.paperType\" placeholder=\"试卷类型\">\n          <el-option v-for=\"item in paperTypeEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"时间限制：\" required v-show=\"form.paperType===4\">\n        <el-date-picker v-model=\"form.limitDateTime\" value-format=\"yyyy-MM-dd HH:mm:ss\" type=\"datetimerange\"\n                        range-separator=\"至\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\">\n        </el-date-picker>\n      </el-form-item>\n      <el-form-item label=\"试卷名称：\"  prop=\"name\" required>\n        <el-input v-model=\"form.name\"/>\n      </el-form-item>\n     \n      <el-form-item label=\"建议时长：\" prop=\"suggestTime\" required>\n        <el-input v-model=\"form.suggestTime\" placeholder=\"分钟\"/>\n      </el-form-item>\n       <el-form-item label=\"试卷总分：\" prop=\"scores\" required>\n        <el-input v-model=\"scores\" />\n      </el-form-item>\n      <el-form-item label=\"模板选择：\" prop=\"titleItems\" >\n       <el-button round @click=\"tClick1\">一</el-button>\n        <el-button round @click=\"tClick2\">二</el-button>\n         <el-button round @click=\"tClick3\">三</el-button>\n      </el-form-item>\n       \n       <el-form-item :key=\"index\" :label=\"'题目'+(index+1)+'：'\" required v-for=\"(titleItem,index) in form.titleItems\">\n\n        <el-input v-model=\"titleItem.name\" style=\"width: 80%\"/>\n        <el-input v-model=\"titleItem.score\" style=\"width:18% ;margin-left:2%\" placeholder=\"设置每题分数\" ></el-input>\n\n        <el-button type=\"text\" class=\"link-left\" style=\"margin-left: 20px\" size=\"mini\" @click=\"addQuestion(titleItem)\">\n          添加题目\n        </el-button>\n        <el-button type=\"text\" class=\"link-left\" size=\"mini\" @click=\"form.titleItems.splice(index,1)\">删除</el-button>\n        <el-card class=\"exampaper-item-box\" v-if=\"titleItem.questionItems.length!==0\">\n          <el-form-item :key=\"questionIndex\" :label=\"'题目'+(questionIndex+1)+'：'\"\n                        v-for=\"(questionItem,questionIndex) in titleItem.questionItems\" style=\"margin-bottom: 15px\">\n            <el-row>\n              <el-col :span=\"23\">\n                <QuestionShow :qType=\"questionItem.questionType\" :question=\"questionItem\"/>\n              </el-col>\n              <el-col :span=\"1\">\n                <el-button type=\"text\" size=\"mini\" @click=\"titleItem.questionItems.splice(questionIndex,1)\">删除\n                </el-button>\n              </el-col>\n            </el-row>\n          </el-form-item>\n          \n        </el-card>\n      </el-form-item>\n    \n\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\n        <el-button @click=\"resetForm\">重置</el-button>\n        <el-button type=\"success\" @click=\"addTitle\">添加题目</el-button>\n         <el-button type=\"success\" @click=\"addAuto\">自动组卷</el-button>\n      </el-form-item>\n    </el-form>\n    <el-dialog :visible.sync=\"questionPage.showDialog\"  width=\"70%\">\n      <el-form :model=\"questionPage.queryParam\" ref=\"queryForm\" :inline=\"true\">\n        <el-form-item label=\"ID：\">\n          <el-input v-model=\"questionPage.queryParam.id\"  clearable></el-input>\n        </el-form-item>\n        <el-form-item label=\"题型：\">\n          <el-select v-model=\"questionPage.queryParam.questionType\" clearable>\n            <el-option v-for=\"item in questionTypeEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"知识点：\">\n          <el-select v-model=\"questionPage.queryParam.chapterId\" clearable>\n            <el-option v-for=\"item in chapters\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"queryForm\">查询</el-button>\n        </el-form-item>\n      </el-form>\n      <el-table v-loading=\"questionPage.listLoading\" :data=\"questionPage.tableData\"\n                @selection-change=\"handleSelectionChange\" border fit highlight-current-row style=\"width: 100%\">\n        <el-table-column type=\"selection\" width=\"35\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"Id\" width=\"60px\"/>\n        <el-table-column prop=\"questionType\" label=\"题型\" :formatter=\"questionTypeFormatter\" width=\"70px\"/>\n        <el-table-column prop=\"shortTitle\" label=\"题干\" show-overflow-tooltip/>\n      </el-table>\n      <pagination v-show=\"questionPage.total>0\" :total=\"questionPage.total\"\n                  :page.sync=\"questionPage.queryParam.pageIndex\" :limit.sync=\"questionPage.queryParam.pageSize\"\n                  @pagination=\"search\"/>\n      <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"questionPage.showDialog = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"confirmQuestionSelect\">确定</el-button>\n     </span>\n    </el-dialog>\n     <el-dialog :visible.sync=\"autoPage.showDialog\"  width=\"70%\" @close='closeDialog'>\n       <el-form  ref=\"autoPage.typePage\" :model=\"autoPage.typePage\">\n       <el-row>\n       \n       <el-form-item :inline=\"true\" :key=\"index\" :label=\"'题型'+(index+1)+'：'\" required v-for=\"(typeItem,index) in autoPage.typePage.questionSelectItems\">\n               <el-col :span=\"6\" style=\"width:21%\">\n                <el-select v-model=\"autoPage.typePage.questionSelectItems[index].questionType\" >\n                  <el-option v-for=\"item in questionTypeEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n                </el-select>\n               </el-col>\n                <el-col :span=\"6\" style=\"width:21%\">\n                 <el-form-item label=\"难度：\" style=\"margin-left:20px\" >\n                    <el-input v-model=\"autoPage.typePage.questionSelectItems[index].level\" placeholder=\"难度：1~5\" style=\"width:120px\"></el-input>\n                 </el-form-item>\n                 </el-col>\n                  <el-col :span=\"6\" style=\"width:21%\">\n                <el-form-item label=\"数量：\" style=\"margin-left:20px\"  >\n                    <el-input v-model=\"autoPage.typePage.questionSelectItems[index].num\" placeholder=\"最少输入1\" style=\"width:120px\"></el-input>\n                </el-form-item>\n                 </el-col>\n                   <el-col :span=\"6\" style=\"width:21%\">\n                  <el-form-item label=\"知识点：\" style=\"width: 300px;\">\n                    <el-select v-model=\"autoPage.typePage.questionSelectItems[index].chapterId\"  clearable>\n                      <el-option v-for=\"item in chapters\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\n                    </el-select>\n                  </el-form-item>\n                   </el-col>\n                        \n          \n        </el-form-item>\n        </el-row>\n        <el-form-item>\n          <el-button @click=\"autoPage.showDialog = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"confirmType\">确定</el-button>\n          <el-button type=\"primary\" @click=\"addType\">添加题型</el-button>\n      </el-form-item>\n      </el-form>\n      \n     \n    </el-dialog>\n    <!--模板-->\n    <el-dialog :visible.sync=\"template1.showDialog\"  width=\"70%\" @close='closeDialog1'>\n       <el-form  ref=\"template1.typePage\" :model=\"template1.typePage\">\n       <el-row>\n        \n       <el-form-item :inline=\"true\" :key=\"index\" :label=\"'题型'+(index+1)+'：'\" required v-for=\"(typeItem,index) in template1.typePage.questionSelectItems\">\n                <el-col :span=\"6\">\n                <el-select v-model=\"template1.typePage.questionSelectItems[index].questionType\" >\n                  <el-option v-for=\"item in questionTypeEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n                </el-select>\n               </el-col>\n             <!--   <el-col :span=\"6\">\n                 <el-form-item label=\"难度：\" style=\"margin-left:20px\" >\n                    <el-input v-model=\"template1.typePage.questionSelectItems[index].level\" placeholder=\"难度：1~5\" style=\"width:120px\"></el-input>\n                 </el-form-item>\n                 </el-col>-->\n                  <el-col :span=\"6\">\n                <el-form-item label=\"数量：\" style=\"margin-left:20px\"  >\n                    <el-input v-model=\"template1.typePage.questionSelectItems[index].num\" placeholder=\"最少输入1\" style=\"width:120px\"></el-input>\n                </el-form-item>\n                 </el-col>\n                   <el-col :span=\"6\">\n                  <el-form-item label=\"分数：\" style=\"margin-left:20px\">\n                    <el-input v-model=\"template1.typePage.questionSelectItems[index].score\" placeholder=\"设置每小题的分数\" style=\"width:120px\" \n                    \n                    ></el-input>\n                  </el-form-item>\n                   </el-col>\n                        \n          \n        </el-form-item>\n        </el-row>\n        <el-form-item>\n          <el-button @click=\"template1.showDialog = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"confirmT1\">确定</el-button>\n      </el-form-item>\n      </el-form>\n      \n     \n    </el-dialog>\n     <el-dialog :visible.sync=\"template3.showDialog\"  width=\"70%\" @close='closeDialog1'>\n       <el-form  ref=\"template1.typePage\" :model=\"template3.typePage\">\n       <el-row>\n        \n       <el-form-item :inline=\"true\" :key=\"index\" :label=\"'题型'+(index+1)+'：'\" required v-for=\"(typeItem,index) in template3.typePage.questionSelectItems\">\n                <el-col :span=\"6\">\n                <el-select v-model=\"template3.typePage.questionSelectItems[index].questionType\" >\n                  <el-option v-for=\"item in questionTypeEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n                </el-select>\n               </el-col>\n             <!--   <el-col :span=\"6\">\n                 <el-form-item label=\"难度：\" style=\"margin-left:20px\" >\n                    <el-input v-model=\"template1.typePage.questionSelectItems[index].level\" placeholder=\"难度：1~5\" style=\"width:120px\"></el-input>\n                 </el-form-item>\n                 </el-col>-->\n                  <el-col :span=\"6\">\n                <el-form-item label=\"数量：\" style=\"margin-left:20px\"  >\n                    <el-input v-model=\"template3.typePage.questionSelectItems[index].num\" placeholder=\"最少输入1\" style=\"width:120px\"></el-input>\n                </el-form-item>\n                 </el-col>\n                   <el-col :span=\"6\">\n                  <el-form-item label=\"分数：\" style=\"margin-left:20px\">\n                    <el-input v-model=\"template3.typePage.questionSelectItems[index].score\" placeholder=\"设置每小题的分数\" style=\"width:120px\" \n                    \n                    ></el-input>\n                  </el-form-item>\n                   </el-col>\n                        \n          \n        </el-form-item>\n        </el-row>\n        <el-form-item>\n          <el-button @click=\"template3.showDialog = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"confirmT3\">确定</el-button>\n      </el-form-item>\n      </el-form>\n      \n     \n    </el-dialog>\n     <el-dialog :visible.sync=\"template2.showDialog\"  width=\"70%\" @close='closeDialog1'>\n       <el-form  ref=\"template1.typePage\" :model=\"template2.typePage\">\n       <el-row>\n        \n       <el-form-item :inline=\"true\" :key=\"index\" :label=\"'题型'+(index+1)+'：'\" required v-for=\"(typeItem,index) in template2.typePage.questionSelectItems\">\n                <el-col :span=\"6\">\n                <el-select v-model=\"template2.typePage.questionSelectItems[index].questionType\" >\n                  <el-option v-for=\"item in questionTypeEnum\" :key=\"item.key\" :value=\"item.key\" :label=\"item.value\"></el-option>\n                </el-select>\n               </el-col>\n             <!--   <el-col :span=\"6\">\n                 <el-form-item label=\"难度：\" style=\"margin-left:20px\" >\n                    <el-input v-model=\"template1.typePage.questionSelectItems[index].level\" placeholder=\"难度：1~5\" style=\"width:120px\"></el-input>\n                 </el-form-item>\n                 </el-col>-->\n                  <el-col :span=\"6\">\n                <el-form-item label=\"数量：\" style=\"margin-left:20px\"  >\n                    <el-input v-model=\"template2.typePage.questionSelectItems[index].num\" placeholder=\"最少输入1\" style=\"width:120px\"></el-input>\n                </el-form-item>\n                 </el-col>\n                   <el-col :span=\"6\">\n                  <el-form-item label=\"分数：\" style=\"margin-left:20px\">\n                    <el-input v-model=\"template2.typePage.questionSelectItems[index].score\" placeholder=\"设置每小题的分数\" style=\"width:120px\" \n                    \n                    ></el-input>\n                  </el-form-item>\n                   </el-col>\n                        \n          \n        </el-form-item>\n        </el-row>\n        <el-form-item>\n          <el-button @click=\"template2.showDialog = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"confirmT2\">确定</el-button>\n      </el-form-item>\n      </el-form>\n      \n     \n    </el-dialog>\n  </div>\n</template>\n\n<script>\n\nimport { mapGetters, mapState, mapActions } from 'vuex'\nimport Pagination from '@/components/Pagination'\nimport QuestionShow from '../question/components/Show'\nimport examPaperApi from '@/api/examPaper'\nimport questionApi from '@/api/question'\n\nexport default {\n  components: { Pagination, QuestionShow },\n  data () {\n    return {\n      form: {\n        id: null,\n        level: null,\n        subjectId: null,\n        paperType: 1,\n        limitDateTime: [],\n        name: '',\n        score:0,\n        scores:0,\n        suggestTime: null,\n        titleItems: []\n      },\n      subjectFilter: null,\n      formLoading: false,\n      rules: {\n        level: [\n          { required: true, message: '请选择年级', trigger: 'change' }\n        ],\n        subjectId: [\n          { required: true, message: '请选择学科', trigger: 'change' }\n        ],\n        paperType: [\n          { required: true, message: '请选择试卷类型', trigger: 'change' }\n        ],\n        name: [\n          { required: true, message: '请输入试卷名称', trigger: 'blur' }\n        ],\n        suggestTime: [\n          { required: true, message: '请输入建议时长', trigger: 'blur' }\n        ]\n      },\n      questionPage: {\n        multipleSelection: [],\n        showDialog: false,\n        queryParam: {\n          id: null,\n          questionType: null,\n          subjectId: '',\n          chapterId:'',\n          pageIndex: 1,\n          pageSize: 5\n        },\n        listLoading: true,\n        tableData: [],\n        total: 0\n      },\n      autoPage:{\n        showDialog: false,\n        typePage:{\n          typeItems: [{\n            num:null,\n            level:null,\n            name: '',\n            chapterId:'',\n            typeItems: []\n          }],\n          subjectId: null,\n          paperType: 1,\n          limitDateTime: null,\n          name: '',\n          suggestTime: null,\n          questionSelectItems:[{\n            num:null,\n            level:null,\n            subjectId: null,\n            questionType:null,\n            chapterId:null\n          }]\n        },\n          \n      },\n      template1:{\n        showDialog: false,\n        typePage:{\n          typeItems: [{\n            num:5,\n            level:null,\n            name: '',\n            chapterId:'',\n            typeItems: []\n          }],\n          subjectId: null,\n          paperType: 1,\n          limitDateTime: null,\n          name: '',\n          suggestTime: null,\n          questionSelectItems:[{\n            num:5,\n            level:1,\n            subjectId: null,\n            questionType:1,\n           score:10\n          },\n          {\n            num:5,\n            level:1,\n            subjectId: 1,\n            questionType:2,\n            score:10\n          }\n        ]\n        },\n          \n      },\n       template2:{\n        showDialog: false,\n        typePage:{\n          typeItems: [{\n            num:5,\n            level:null,\n            name: '',\n            chapterId:'',\n            typeItems: []\n          }],\n          subjectId: null,\n          paperType: 1,\n          limitDateTime: null,\n          name: '',\n          suggestTime: null,\n          questionSelectItems:[{\n            num:1,\n            level:1,\n            subjectId: null,\n            questionType:1,\n           score:5\n          },\n          {\n            num:1,\n            level:1,\n            subjectId: 1,\n            questionType:2,\n            score:6\n          }\n        ]\n        },\n          \n      },\n       template3:{\n        showDialog: false,\n        typePage:{\n          typeItems: [{\n            num:5,\n            level:null,\n            name: '',\n            chapterId:'',\n            typeItems: []\n          }],\n          subjectId: null,\n          paperType: 1,\n          limitDateTime: null,\n          name: '',\n          suggestTime: null,\n          questionSelectItems:[{\n            num:1,\n            level:1,\n            subjectId: null,\n            questionType:1,\n           score:5\n          },\n          {\n            num:1,\n            level:1,\n            subjectId: 1,\n            questionType:2,\n            score:6\n          }\n        ]\n        },\n          \n      },\n      queryCha:{\n          pageIndex:1,\n          pageSize:100,\n          subjectId:'',\n          gradeLevel:'',\n        },\n      chapters:'',\n     \n      currentTitleItem: [],\n      \n      \n    }\n  },\n  created () {\n    let id = this.$route.query.id\n    let _this = this\n  //  this.autoPage.questionSelectItems.questionType=this.questionPage.queryParam.questionType\n    this.initSubject(function () {\n      _this.subjectFilter = _this.subjects\n    })\n    if (id && parseInt(id) !== 0) {\n      _this.formLoading = true\n      examPaperApi.select(id).then(re => {\n        _this.form = re.response\n        _this.formLoading = false\n      })\n    }\n   this.form\n    \n\n  },\n  watch: {\n    //对象双向数据绑定\n     'form.subjectId'(newVal, oldVal) {\n      // console.log(`new:${newVal}, old:${oldVal}`);\n       if(newVal){\n         this.queryCha.subjectId=newVal;\n         this.getChapter();\n       }\n    }, \n /*  'form.titleItems'(newVal, oldVal) {\n      console.log(newVal);\n       if(newVal){\n         //计算总分\n         let scores=0\n         for(let i=0;i<this.form.titleItems.length;i++){\n           let score= Number(this.form.titleItems[i].score);\n           let len=this.form.titleItems[i].questionItems.length;\n           console.log(score*len);\n            let sum=score*len;\n           scores=score+sum;\n           console.log(scores);\n         }\n         this.form.scores=scores;\n         \n        \n         \n       }\n    }, */\n\n    titleItems(newVal, oldValue){\n       console.log(newVal);\n       if(newVal){\n         //计算总分\n         let scores=0\n          if(this.form.titleItems.length>0){\n       if(this.form.titleItems[0].questionItems.length>0){\n         for(let i=0;i<this.form.titleItems.length;i++){\n           let score= Number(this.form.titleItems[i].score);\n           let len=this.form.titleItems[i].questionItems.length;\n           console.log(len);\n           console.log(score);\n            let sum=score*len;\n           scores=scores+sum;\n           console.log(scores);\n         }\n         this.form.scores=scores;\n          }\n          }\n         \n        \n         \n       }\n    }\n  },\n  methods: {\n     getChapter(){\n    questionApi.chapterList(this.queryCha).then(re=>{\n        let list=re.response.list;\n        let list1=[];\n        //let chaId=[];\n        //去除空项\n        this.chaId=[]\n       for(let i=0;i<list.length;i++){\n         this.chaId.push(list[i].id)\n         if(list[i].name){\n           list1.push(list[i])\n         }\n       }\n        \n        this.chapters=list1\n        // this.form.chapterId=String(this.chapterShow.chapters[0].id)\n       //console.log(this.chapters)\n    })\n     },\n    submitForm () {\n      let _this = this\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          this.formLoading = true\n          examPaperApi.edit(this.form).then(re => {\n            if (re.code === 1) {\n              _this.$message.success(re.message)\n              _this.delCurrentView(_this).then(() => {\n                _this.$router.push('/exam/paper/list')\n              })\n            } else {\n              _this.$message.error(re.message)\n              this.formLoading = false\n            }\n          }).catch(e => {\n            this.formLoading = false\n          })\n        } else {\n          return false\n        }\n      })\n    },\n    addTitle () {\n      this.form.titleItems.push({\n        name: '',\n        score:'',\n        questionItems: [],\n      })\n    },\n    //添加题型\n     addType () {\n      this.autoPage.typePage.questionSelectItems.push({\n        name: '',\n        typeItems: [],\n        num:null,\n        level:null,\n        chapterId:null\n      })\n      console.log(this.autoPage.typePage.questionSelectItems)\n    },\n    addQuestion (titleItem) {\n      this.currentTitleItem = titleItem\n      this.questionPage.showDialog = true\n      this.search()\n    },\n     addAuto (titleItem) {\n      this.currentTitleItem = titleItem\n      this.autoPage.showDialog = true\n      this.search()\n    },\n     \n    removeTitleItem (titleItem) {\n      this.form.titleItems.remove(titleItem)\n    },\n    removeQuestion (titleItem, questionItem) {\n      titleItem.questionItems.remove(questionItem)\n    },\n    queryForm () {\n      this.questionPage.queryParam.pageIndex = 1\n      this.search()\n    },\n    confirmQuestionSelect () {\n      let _this = this\n      this.questionPage.multipleSelection.forEach(q => {\n        questionApi.select(q.id).then(re => {\n          _this.currentTitleItem.questionItems.push(re.response)\n         // console.log(_this.currentTitleItem)\n        })\n      })\n      this.questionPage.showDialog = false\n    },\n      //  自动组卷\n    confirmType(){\n      this.autoPage.typePage.subjectId=this.form.subjectId;\n      this.autoPage.typePage.suggestTime=this.form.suggestTime;\n      for(let i=0;i<this.autoPage.typePage.questionSelectItems.length;i++){\n        this.autoPage.typePage.questionSelectItems[i].name=''\n        this.autoPage.typePage.questionSelectItems[i].subjectId=this.form.subjectId;\n       // this.autoPage.typePage.questionSelectItems[i].questionType= this.autoPage.typePage.questionSelectItems.questionType;\n      }\n     // console.log(this.autoPage.typePage)\n          let _this = this\n        examPaperApi.auto(this.autoPage.typePage).then(data => {\n          const re = data.response\n          \n           // this.autoform.titleItems.questionItems=[]\n            for(let i=0;i<re.titleItems.length;i++){\n               let tmp=re.titleItems[i].questionItems;\n               let _score=re.titleItems[i].score\n                 this.form.titleItems.push({\n                    name: '',\n                    questionItems:tmp,\n                    score:_score\n                  })\n            //  for(let j=0;j<re.titleItems[i].questionItems.length;j++){\n               // console.log(re.titleItems[i].questionItems[j])\n               \n                // this.currentTitleItem.questionItems.push(tmp)\n             //       this.form.titleItems[i].questionItems[j].push(tmp)\n                /*   this.$set(this.autoform.titleItems,j,{\n                        name: '',\n                    questionItems: tmp,\n                  })*/\n             // }\n            }\n          \n            console.log(this.form.titleItems)\n          \n        })\n        //this.$refs['autoPage'].resetFields()  // 这里可以换做移除样式的方法clearValidate\n       // this.autoPage.typePage = copyProps(this.autoPage.typePage)  \n      \n        this.autoPage.showDialog = false\n    },\n    closeDialog(){\n      this.autoPage.typePage={typeItems: [{\n            num:null,\n            level:null,\n            name: '',\n            typeItems: []\n          }],\n          subjectId: null,\n          paperType: 1,\n          limitDateTime: null,\n          name: '',\n          suggestTime: null,\n          questionSelectItems:[{\n            num:null,\n            level:null,\n            subjectId: null,\n            questionType:null\n          }]\n      }\n    },\n     closeDialog1(){\n       \n     },\n    //计算分数\n  /*  computeScore(){\n      let scores=0\n         for(let i=0;i<this.form.titleItems.length;i++){\n           let score= Number(this.form.titleItems[i].score);\n           let len=this.form.titleItems[i].questionItems.length;\n           console.log(score*len);\n            let sum=score*len;\n           scores=score+sum;\n           console.log(scores);\n         }\n         this.form.scores=scores;\n    },*/\n    //模板\n    tClick1(){\n      this.template1.showDialog=true\n    },\n    tClick2(){\n      this.template2.showDialog=true\n    },\n    tClick3(){\n      this.template3.showDialog=true\n    },\n    confirmT1(){\n      this.template1.typePage.subjectId=this.form.subjectId;\n      this.template1.typePage.suggestTime=this.form.suggestTime;\n      for(let i=0;i<this.template1.typePage.questionSelectItems.length;i++){\n        this.template1.typePage.questionSelectItems[i].name=''\n        this.template1.typePage.questionSelectItems[i].subjectId=this.form.subjectId;\n       // this.autoPage.typePage.questionSelectItems[i].questionType= this.autoPage.typePage.questionSelectItems.questionType;\n      }\n     // console.log(this.autoPage.typePage)\n          let _this = this\n        examPaperApi.auto(this.template1.typePage).then(data => {\n          const re = data.response\n          \n           // this.autoform.titleItems.questionItems=[]\n            for(let i=0;i<re.titleItems.length;i++){\n              let tmp=re.titleItems[i].questionItems;\n               let _score=re.titleItems[i].score\n                 this.form.titleItems.push({\n                    name: '',\n                    questionItems:tmp,\n                    score:_score\n                  })\n                \n            }\n          \n           // console.log(this.form.titleItems)\n          \n        })\n        //this.$refs['autoPage'].resetFields()  // 这里可以换做移除样式的方法clearValidate\n       // this.autoPage.typePage = copyProps(this.autoPage.typePage)  \n      \n        this.template1.showDialog = false\n    },\n     confirmT2(){\n      this.template2.typePage.subjectId=this.form.subjectId;\n      this.template2.typePage.suggestTime=this.form.suggestTime;\n      for(let i=0;i<this.template2.typePage.questionSelectItems.length;i++){\n        this.template2.typePage.questionSelectItems[i].name=''\n        this.template2.typePage.questionSelectItems[i].subjectId=this.form.subjectId;\n       // this.autoPage.typePage.questionSelectItems[i].questionType= this.autoPage.typePage.questionSelectItems.questionType;\n      }\n     // console.log(this.autoPage.typePage)\n          let _this = this\n        examPaperApi.auto(this.template2.typePage).then(data => {\n          const re = data.response\n          \n           // this.autoform.titleItems.questionItems=[]\n            for(let i=0;i<re.titleItems.length;i++){\n              let tmp=re.titleItems[i].questionItems;\n               let _score=re.titleItems[i].score\n                 this.form.titleItems.push({\n                    name: '',\n                    questionItems:tmp,\n                    score:_score\n                  })\n                \n            }\n          \n           // console.log(this.form.titleItems)\n          \n        })\n        //this.$refs['autoPage'].resetFields()  // 这里可以换做移除样式的方法clearValidate\n       // this.autoPage.typePage = copyProps(this.autoPage.typePage)  \n      \n        this.template2.showDialog = false\n    },\n     confirmT3(){\n      this.template3.typePage.subjectId=this.form.subjectId;\n      this.template3.typePage.suggestTime=this.form.suggestTime;\n      for(let i=0;i<this.template3.typePage.questionSelectItems.length;i++){\n        this.template3.typePage.questionSelectItems[i].name=''\n        this.template3.typePage.questionSelectItems[i].subjectId=this.form.subjectId;\n       // this.autoPage.typePage.questionSelectItems[i].questionType= this.autoPage.typePage.questionSelectItems.questionType;\n      }\n     // console.log(this.autoPage.typePage)\n          let _this = this\n        examPaperApi.auto(this.template3.typePage).then(data => {\n          const re = data.response\n          \n           // this.autoform.titleItems.questionItems=[]\n            for(let i=0;i<re.titleItems.length;i++){\n              let tmp=re.titleItems[i].questionItems;\n               let _score=re.titleItems[i].score\n                 this.form.titleItems.push({\n                    name: '',\n                    questionItems:tmp,\n                    score:_score\n                  })\n                \n            }\n          \n           // console.log(this.form.titleItems)\n          \n        })\n        //this.$refs['autoPage'].resetFields()  // 这里可以换做移除样式的方法clearValidate\n       // this.autoPage.typePage = copyProps(this.autoPage.typePage)  \n      \n        this.template3.showDialog = false\n    },\n    levelChange () {\n      this.form.subjectId = null\n      this.subjectFilter = this.subjects.filter(data => data.level === this.form.level)\n    },\n    search () {\n      this.questionPage.queryParam.subjectId = this.form.subjectId\n      this.questionPage.listLoading = true\n      questionApi.pageList(this.questionPage.queryParam).then(data => {\n        const re = data.response\n        this.questionPage.tableData = re.list\n        this.questionPage.total = re.total\n        this.questionPage.queryParam.pageIndex = re.pageNum\n        this.questionPage.listLoading = false\n      })\n    },\n    handleSelectionChange (val) {\n      this.questionPage.multipleSelection = val\n    },\n    questionTypeFormatter (row, column, cellValue, index) {\n      return this.enumFormat(this.questionTypeEnum, cellValue)\n    },\n    subjectFormatter (row, column, cellValue, index) {\n      return this.subjectEnumFormat(cellValue)\n    },\n    resetForm () {\n      this.$refs['form'].resetFields()\n      this.form = {\n        id: null,\n        level: null,\n        subjectId: null,\n        paperType: 1,\n        limitDateTime: [],\n        name: '',\n        suggestTime: null,\n        titleItems: []\n      }\n      this.autoPage.typePage={typeItems: [{\n            num:null,\n            level:null,\n            name: '',\n            typeItems: []\n          }],\n          subjectId: null,\n          paperType: 1,\n          limitDateTime: null,\n          name: '',\n          suggestTime: null,\n          questionSelectItems:[{\n            num:null,\n            level:null,\n            subjectId: null,\n            questionType:null\n          }]\n      }\n    },\n    ...mapActions('exam', { initSubject: 'initSubject' }),\n    ...mapActions('tagsView', { delCurrentView: 'delCurrentView' })\n  },\n  computed: {\n    ...mapGetters('enumItem', ['enumFormat']),\n    ...mapState('enumItem', {\n      questionTypeEnum: state => state.exam.question.typeEnum,\n      paperTypeEnum: state => state.exam.examPaper.paperTypeEnum,\n      levelEnum: state => state.user.levelEnum\n    }),\n    ...mapState('exam', { subjects: state => state.subjects }),\n    /*maxValue(){\n      return '最多输入'+this.questionPage.total\n    },\n    */\n   //监听对象属性变化\n   titleItems(){\n     return this.form.titleItems;\n   },\n   scores(){\n     let scores=0;\n     console.log(this.form.titleItems.length);\n     console.log(this.form.titleItems);\n     \n     if(this.form.titleItems.length>0){\n       if(this.form.titleItems[0].questionItems.length>0){\n        scores=0\n         console.log(scores);\n         for(let i=0;i<this.form.titleItems.length;i++){\n           let score= Number(this.form.titleItems[i].score);\n           let len=this.form.titleItems[i].questionItems.length;\n          // console.log(score*len);\n            let sum=score*len;\n             console.log(len);\n           console.log(score);\n           scores=scores+sum;\n           console.log(scores);\n         }\n         this.form.scores=scores\n     }\n     }\n      \n        return scores;\n\n   }\n  \n  }\n}\n</script>\n\n<style lang=\"scss\">\n  .exampaper-item-box {\n    .q-title {\n      margin: 0px 5px 0px 5px;\n    }\n    .q-item-content {\n    }\n  }\n</style>\n"]}]}