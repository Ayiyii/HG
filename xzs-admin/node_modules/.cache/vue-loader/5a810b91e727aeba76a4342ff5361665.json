{"remainingRequest":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/message/send.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/src/views/message/send.vue","mtime":1609922416767},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cynthiachen/project/graduation_design/xzs/xzs-mysql/source/vue/xzs-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JwppbXBvcnQgdXNlckFwaSBmcm9tICdAL2FwaS91c2VyJwppbXBvcnQgbWVzc2FnZUFwaSBmcm9tICdAL2FwaS9tZXNzYWdlJwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgZm9ybTogewogICAgICAgIHRpdGxlOiAnJywKICAgICAgICBjb250ZW50OiAnJywKICAgICAgICByZWNlaXZlVXNlcklkczogW10KICAgICAgfSwKICAgICAgZm9ybUxvYWRpbmc6IGZhbHNlLAogICAgICBzZWxlY3RMb2FkaW5nOiBmYWxzZSwKICAgICAgb3B0aW9uczogW10sCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgdGl0bGU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXmtojmga/moIfpopgnLCB0cmlnZ2VyOiAnYmx1cicgfQogICAgICAgIF0sCiAgICAgICAgcmVhbE5hbWU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXmtojmga/lhoXlrrknLCB0cmlnZ2VyOiAnYmx1cicgfQogICAgICAgIF0KICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZCAoKSB7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRVc2VyQnlVc2VyTmFtZSAocXVlcnkpIHsKICAgICAgbGV0IF90aGlzID0gdGhpcwogICAgICBpZiAocXVlcnkgIT09ICcnKSB7CiAgICAgICAgX3RoaXMuc2VsZWN0TG9hZGluZyA9IHRydWUKICAgICAgICB1c2VyQXBpLnNlbGVjdEJ5VXNlck5hbWUocXVlcnkpLnRoZW4ocmUgPT4gewogICAgICAgICAgX3RoaXMuc2VsZWN0TG9hZGluZyA9IGZhbHNlCiAgICAgICAgICBfdGhpcy5vcHRpb25zID0gcmUucmVzcG9uc2UKICAgICAgICB9KQogICAgICB9IGVsc2UgewogICAgICAgIF90aGlzLm9wdGlvbnMgPSBbXQogICAgICB9CiAgICB9LAogICAgc3VibWl0Rm9ybSAoKSB7CiAgICAgIGxldCBfdGhpcyA9IHRoaXMKICAgICAgdGhpcy4kcmVmcy5mb3JtLnZhbGlkYXRlKCh2YWxpZCkgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgdGhpcy5mb3JtTG9hZGluZyA9IHRydWUKICAgICAgICAgIG1lc3NhZ2VBcGkuc2VuZCh0aGlzLmZvcm0pLnRoZW4oZGF0YSA9PiB7CiAgICAgICAgICAgIGlmIChkYXRhLmNvZGUgPT09IDEpIHsKICAgICAgICAgICAgICBfdGhpcy4kbWVzc2FnZS5zdWNjZXNzKGRhdGEubWVzc2FnZSkKICAgICAgICAgICAgICBfdGhpcy5kZWxDdXJyZW50VmlldyhfdGhpcykudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICBfdGhpcy4kcm91dGVyLnB1c2goJy9tZXNzYWdlL2xpc3QnKQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgX3RoaXMuJG1lc3NhZ2UuZXJyb3IoZGF0YS5tZXNzYWdlKQogICAgICAgICAgICAgIF90aGlzLmZvcm1Mb2FkaW5nID0gZmFsc2UKICAgICAgICAgICAgfQogICAgICAgICAgfSkuY2F0Y2goZSA9PiB7CiAgICAgICAgICAgIF90aGlzLmZvcm1Mb2FkaW5nID0gZmFsc2UKICAgICAgICAgIH0pCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiBmYWxzZQogICAgICAgIH0KICAgICAgfSkKICAgIH0sCiAgICByZXNldEZvcm0gKCkgewogICAgICB0aGlzLiRyZWZzWydmb3JtJ10ucmVzZXRGaWVsZHMoKQogICAgICB0aGlzLmZvcm0gPSB7CiAgICAgICAgdGl0bGU6ICcnLAogICAgICAgIGNvbnRlbnQ6ICcnLAogICAgICAgIHJlY2VpdmVVc2VySWRzOiBbXQogICAgICB9CiAgICB9LAogICAgLi4ubWFwQWN0aW9ucygndGFnc1ZpZXcnLCB7IGRlbEN1cnJlbnRWaWV3OiAnZGVsQ3VycmVudFZpZXcnIH0pCiAgfQp9Cg=="},{"version":3,"sources":["send.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"send.vue","sourceRoot":"src/views/message","sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <el-form :model=\"form\" ref=\"form\" label-width=\"100px\" v-loading=\"formLoading\" :rules=\"rules\">\n      <el-form-item label=\"标题：\"  prop=\"title\" required>\n        <el-input v-model=\"form.title\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"内容：\" prop=\"content\" required>\n        <el-input type=\"textarea\" rows=\"13\"  v-model=\"form.content\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"接收人：\" required>\n        <el-select v-model=\"form.receiveUserIds\" multiple filterable remote reserve-keyword\n          placeholder=\"请输入用户名\"\n          :remote-method=\"getUserByUserName\"\n          :loading=\"selectLoading\">\n          <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.name\" :value=\"item.value\"/>\n        </el-select>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm\">发送</el-button>\n        <el-button @click=\"resetForm\">重置</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport userApi from '@/api/user'\nimport messageApi from '@/api/message'\n\nexport default {\n  data () {\n    return {\n      form: {\n        title: '',\n        content: '',\n        receiveUserIds: []\n      },\n      formLoading: false,\n      selectLoading: false,\n      options: [],\n      rules: {\n        title: [\n          { required: true, message: '请输入消息标题', trigger: 'blur' }\n        ],\n        realName: [\n          { required: true, message: '请输入消息内容', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created () {\n  },\n  methods: {\n    getUserByUserName (query) {\n      let _this = this\n      if (query !== '') {\n        _this.selectLoading = true\n        userApi.selectByUserName(query).then(re => {\n          _this.selectLoading = false\n          _this.options = re.response\n        })\n      } else {\n        _this.options = []\n      }\n    },\n    submitForm () {\n      let _this = this\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          this.formLoading = true\n          messageApi.send(this.form).then(data => {\n            if (data.code === 1) {\n              _this.$message.success(data.message)\n              _this.delCurrentView(_this).then(() => {\n                _this.$router.push('/message/list')\n              })\n            } else {\n              _this.$message.error(data.message)\n              _this.formLoading = false\n            }\n          }).catch(e => {\n            _this.formLoading = false\n          })\n        } else {\n          return false\n        }\n      })\n    },\n    resetForm () {\n      this.$refs['form'].resetFields()\n      this.form = {\n        title: '',\n        content: '',\n        receiveUserIds: []\n      }\n    },\n    ...mapActions('tagsView', { delCurrentView: 'delCurrentView' })\n  }\n}\n</script>\n"]}]}